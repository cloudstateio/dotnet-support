ARG NETCORE_VERSION=3.0-bionic
FROM mcr.microsoft.com/dotnet/core/sdk:${NETCORE_VERSION} as build

WORKDIR /src

COPY protobuf/ ./protobuf 
COPY build/ ./build

COPY csharp-support-protocols/csharp-support-protocols.csproj csharp-support-protocols/csharp-support-protocols.csproj
COPY csharp-support-abstractions/csharp-support-abstractions.csproj csharp-support-abstractions/csharp-support-abstractions.csproj
COPY csharp-support/csharp-support.csproj csharp-support/csharp-support.csproj
COPY csharp-support-example/csharp-support-example.csproj csharp-support-example/csharp-support-example.csproj

RUN cd csharp-support-example && \
    dotnet restore

COPY csharp-support-protocols/ ./csharp-support-protocols
COPY csharp-support-abstractions/ ./csharp-support-abstractions

RUN cd csharp-support-protocols && \
    dotnet build
RUN cd csharp-support-abstractions && \
    dotnet build

COPY csharp-support/ ./csharp-support
COPY csharp-support-example/ ./csharp-support-example

RUN cd csharp-support-example && \
    dotnet publish --no-restore -o ../dist

FROM mcr.microsoft.com/dotnet/core/runtime:${NETCORE_VERSION} as runtime

## After moving to bionic, this isn't required.
## But, it didn't actually work on alpine anyway.
# RUN apk update && apk add --no-cache libc6-compat

WORKDIR /app

COPY --from=build /src/dist ./

EXPOSE 8080

CMD ["dotnet", "csharp-support-example.dll"]
