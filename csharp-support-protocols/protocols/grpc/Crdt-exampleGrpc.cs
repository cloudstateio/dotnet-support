// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: example/crdts/crdt-example.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Com.Example.Crdts {
  public static partial class CrdtExample
  {
    static readonly string __ServiceName = "com.example.crdts.CrdtExample";

    static readonly grpc::Marshaller<global::Com.Example.Crdts.UpdateCounter> __Marshaller_com_example_crdts_UpdateCounter = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.UpdateCounter.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.CounterValue> __Marshaller_com_example_crdts_CounterValue = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.CounterValue.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.Get> __Marshaller_com_example_crdts_Get = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.Get.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.MutateSet> __Marshaller_com_example_crdts_MutateSet = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.MutateSet.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.SetSize> __Marshaller_com_example_crdts_SetSize = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.SetSize.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.SetValue> __Marshaller_com_example_crdts_SetValue = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.SetValue.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.User> __Marshaller_com_example_crdts_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Com.Example.Crdts.OnlineStatus> __Marshaller_com_example_crdts_OnlineStatus = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Com.Example.Crdts.OnlineStatus.Parser.ParseFrom);

    static readonly grpc::Method<global::Com.Example.Crdts.UpdateCounter, global::Com.Example.Crdts.CounterValue> __Method_IncrementGCounter = new grpc::Method<global::Com.Example.Crdts.UpdateCounter, global::Com.Example.Crdts.CounterValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IncrementGCounter",
        __Marshaller_com_example_crdts_UpdateCounter,
        __Marshaller_com_example_crdts_CounterValue);

    static readonly grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.CounterValue> __Method_GetGCounter = new grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.CounterValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGCounter",
        __Marshaller_com_example_crdts_Get,
        __Marshaller_com_example_crdts_CounterValue);

    static readonly grpc::Method<global::Com.Example.Crdts.UpdateCounter, global::Com.Example.Crdts.CounterValue> __Method_UpdatePNCounter = new grpc::Method<global::Com.Example.Crdts.UpdateCounter, global::Com.Example.Crdts.CounterValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdatePNCounter",
        __Marshaller_com_example_crdts_UpdateCounter,
        __Marshaller_com_example_crdts_CounterValue);

    static readonly grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.CounterValue> __Method_GetPNCounter = new grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.CounterValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPNCounter",
        __Marshaller_com_example_crdts_Get,
        __Marshaller_com_example_crdts_CounterValue);

    static readonly grpc::Method<global::Com.Example.Crdts.MutateSet, global::Com.Example.Crdts.SetSize> __Method_MutateGSet = new grpc::Method<global::Com.Example.Crdts.MutateSet, global::Com.Example.Crdts.SetSize>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MutateGSet",
        __Marshaller_com_example_crdts_MutateSet,
        __Marshaller_com_example_crdts_SetSize);

    static readonly grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.SetValue> __Method_GetGSet = new grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.SetValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGSet",
        __Marshaller_com_example_crdts_Get,
        __Marshaller_com_example_crdts_SetValue);

    static readonly grpc::Method<global::Com.Example.Crdts.MutateSet, global::Com.Example.Crdts.SetSize> __Method_MutateORSet = new grpc::Method<global::Com.Example.Crdts.MutateSet, global::Com.Example.Crdts.SetSize>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MutateORSet",
        __Marshaller_com_example_crdts_MutateSet,
        __Marshaller_com_example_crdts_SetSize);

    static readonly grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.SetValue> __Method_GetORSet = new grpc::Method<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.SetValue>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetORSet",
        __Marshaller_com_example_crdts_Get,
        __Marshaller_com_example_crdts_SetValue);

    static readonly grpc::Method<global::Com.Example.Crdts.User, global::Google.Protobuf.WellKnownTypes.Empty> __Method_Connect = new grpc::Method<global::Com.Example.Crdts.User, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Connect",
        __Marshaller_com_example_crdts_User,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Com.Example.Crdts.User, global::Com.Example.Crdts.OnlineStatus> __Method_Monitor = new grpc::Method<global::Com.Example.Crdts.User, global::Com.Example.Crdts.OnlineStatus>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "Monitor",
        __Marshaller_com_example_crdts_User,
        __Marshaller_com_example_crdts_OnlineStatus);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Com.Example.Crdts.CrdtExampleReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CrdtExample</summary>
    [grpc::BindServiceMethod(typeof(CrdtExample), "BindService")]
    public abstract partial class CrdtExampleBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.CounterValue> IncrementGCounter(global::Com.Example.Crdts.UpdateCounter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.CounterValue> GetGCounter(global::Com.Example.Crdts.Get request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.CounterValue> UpdatePNCounter(global::Com.Example.Crdts.UpdateCounter request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.CounterValue> GetPNCounter(global::Com.Example.Crdts.Get request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.SetSize> MutateGSet(global::Com.Example.Crdts.MutateSet request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.SetValue> GetGSet(global::Com.Example.Crdts.Get request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.SetSize> MutateORSet(global::Com.Example.Crdts.MutateSet request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Com.Example.Crdts.SetValue> GetORSet(global::Com.Example.Crdts.Get request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Connect the given user. They will stay connected as long as the stream stays open.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task Connect(global::Com.Example.Crdts.User request, grpc::IServerStreamWriter<global::Google.Protobuf.WellKnownTypes.Empty> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Monitor the online status of the given user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      public virtual global::System.Threading.Tasks.Task Monitor(global::Com.Example.Crdts.User request, grpc::IServerStreamWriter<global::Com.Example.Crdts.OnlineStatus> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CrdtExample</summary>
    public partial class CrdtExampleClient : grpc::ClientBase<CrdtExampleClient>
    {
      /// <summary>Creates a new client for CrdtExample</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public CrdtExampleClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CrdtExample that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public CrdtExampleClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected CrdtExampleClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected CrdtExampleClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::Com.Example.Crdts.CounterValue IncrementGCounter(global::Com.Example.Crdts.UpdateCounter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrementGCounter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.CounterValue IncrementGCounter(global::Com.Example.Crdts.UpdateCounter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IncrementGCounter, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> IncrementGCounterAsync(global::Com.Example.Crdts.UpdateCounter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IncrementGCounterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> IncrementGCounterAsync(global::Com.Example.Crdts.UpdateCounter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IncrementGCounter, null, options, request);
      }
      public virtual global::Com.Example.Crdts.CounterValue GetGCounter(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGCounter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.CounterValue GetGCounter(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGCounter, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> GetGCounterAsync(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGCounterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> GetGCounterAsync(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGCounter, null, options, request);
      }
      public virtual global::Com.Example.Crdts.CounterValue UpdatePNCounter(global::Com.Example.Crdts.UpdateCounter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePNCounter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.CounterValue UpdatePNCounter(global::Com.Example.Crdts.UpdateCounter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdatePNCounter, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> UpdatePNCounterAsync(global::Com.Example.Crdts.UpdateCounter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdatePNCounterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> UpdatePNCounterAsync(global::Com.Example.Crdts.UpdateCounter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdatePNCounter, null, options, request);
      }
      public virtual global::Com.Example.Crdts.CounterValue GetPNCounter(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPNCounter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.CounterValue GetPNCounter(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPNCounter, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> GetPNCounterAsync(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPNCounterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.CounterValue> GetPNCounterAsync(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPNCounter, null, options, request);
      }
      public virtual global::Com.Example.Crdts.SetSize MutateGSet(global::Com.Example.Crdts.MutateSet request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MutateGSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.SetSize MutateGSet(global::Com.Example.Crdts.MutateSet request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MutateGSet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetSize> MutateGSetAsync(global::Com.Example.Crdts.MutateSet request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MutateGSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetSize> MutateGSetAsync(global::Com.Example.Crdts.MutateSet request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MutateGSet, null, options, request);
      }
      public virtual global::Com.Example.Crdts.SetValue GetGSet(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.SetValue GetGSet(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGSet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetValue> GetGSetAsync(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetValue> GetGSetAsync(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGSet, null, options, request);
      }
      public virtual global::Com.Example.Crdts.SetSize MutateORSet(global::Com.Example.Crdts.MutateSet request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MutateORSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.SetSize MutateORSet(global::Com.Example.Crdts.MutateSet request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MutateORSet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetSize> MutateORSetAsync(global::Com.Example.Crdts.MutateSet request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MutateORSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetSize> MutateORSetAsync(global::Com.Example.Crdts.MutateSet request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MutateORSet, null, options, request);
      }
      public virtual global::Com.Example.Crdts.SetValue GetORSet(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetORSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Com.Example.Crdts.SetValue GetORSet(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetORSet, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetValue> GetORSetAsync(global::Com.Example.Crdts.Get request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetORSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Com.Example.Crdts.SetValue> GetORSetAsync(global::Com.Example.Crdts.Get request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetORSet, null, options, request);
      }
      /// <summary>
      /// Connect the given user. They will stay connected as long as the stream stays open.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Google.Protobuf.WellKnownTypes.Empty> Connect(global::Com.Example.Crdts.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Connect(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Connect the given user. They will stay connected as long as the stream stays open.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Google.Protobuf.WellKnownTypes.Empty> Connect(global::Com.Example.Crdts.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Connect, null, options, request);
      }
      /// <summary>
      /// Monitor the online status of the given user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Com.Example.Crdts.OnlineStatus> Monitor(global::Com.Example.Crdts.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Monitor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Monitor the online status of the given user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncServerStreamingCall<global::Com.Example.Crdts.OnlineStatus> Monitor(global::Com.Example.Crdts.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_Monitor, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override CrdtExampleClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CrdtExampleClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CrdtExampleBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_IncrementGCounter, serviceImpl.IncrementGCounter)
          .AddMethod(__Method_GetGCounter, serviceImpl.GetGCounter)
          .AddMethod(__Method_UpdatePNCounter, serviceImpl.UpdatePNCounter)
          .AddMethod(__Method_GetPNCounter, serviceImpl.GetPNCounter)
          .AddMethod(__Method_MutateGSet, serviceImpl.MutateGSet)
          .AddMethod(__Method_GetGSet, serviceImpl.GetGSet)
          .AddMethod(__Method_MutateORSet, serviceImpl.MutateORSet)
          .AddMethod(__Method_GetORSet, serviceImpl.GetORSet)
          .AddMethod(__Method_Connect, serviceImpl.Connect)
          .AddMethod(__Method_Monitor, serviceImpl.Monitor).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CrdtExampleBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_IncrementGCounter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.UpdateCounter, global::Com.Example.Crdts.CounterValue>(serviceImpl.IncrementGCounter));
      serviceBinder.AddMethod(__Method_GetGCounter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.CounterValue>(serviceImpl.GetGCounter));
      serviceBinder.AddMethod(__Method_UpdatePNCounter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.UpdateCounter, global::Com.Example.Crdts.CounterValue>(serviceImpl.UpdatePNCounter));
      serviceBinder.AddMethod(__Method_GetPNCounter, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.CounterValue>(serviceImpl.GetPNCounter));
      serviceBinder.AddMethod(__Method_MutateGSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.MutateSet, global::Com.Example.Crdts.SetSize>(serviceImpl.MutateGSet));
      serviceBinder.AddMethod(__Method_GetGSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.SetValue>(serviceImpl.GetGSet));
      serviceBinder.AddMethod(__Method_MutateORSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.MutateSet, global::Com.Example.Crdts.SetSize>(serviceImpl.MutateORSet));
      serviceBinder.AddMethod(__Method_GetORSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Com.Example.Crdts.Get, global::Com.Example.Crdts.SetValue>(serviceImpl.GetORSet));
      serviceBinder.AddMethod(__Method_Connect, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Com.Example.Crdts.User, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.Connect));
      serviceBinder.AddMethod(__Method_Monitor, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Com.Example.Crdts.User, global::Com.Example.Crdts.OnlineStatus>(serviceImpl.Monitor));
    }

  }
}
#endregion
