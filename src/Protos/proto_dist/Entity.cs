// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cloudstate/entity.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cloudstate {

  /// <summary>Holder for reflection information generated from cloudstate/entity.proto</summary>
  public static partial class EntityReflection {

    #region Descriptor
    /// <summary>File descriptor for cloudstate/entity.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EntityReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdjbG91ZHN0YXRlL2VudGl0eS5wcm90bxIKY2xvdWRzdGF0ZRoZZ29vZ2xl",
            "L3Byb3RvYnVmL2FueS5wcm90bxobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnBy",
            "b3RvGiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90byIuCgVSZXBs",
            "eRIlCgdwYXlsb2FkGAEgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSJcCgdG",
            "b3J3YXJkEhQKDHNlcnZpY2VfbmFtZRgBIAEoCRIUCgxjb21tYW5kX25hbWUY",
            "AiABKAkSJQoHcGF5bG9hZBgDIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5Bbnki",
            "jAEKDENsaWVudEFjdGlvbhIiCgVyZXBseRgBIAEoCzIRLmNsb3Vkc3RhdGUu",
            "UmVwbHlIABImCgdmb3J3YXJkGAIgASgLMhMuY2xvdWRzdGF0ZS5Gb3J3YXJk",
            "SAASJgoHZmFpbHVyZRgDIAEoCzITLmNsb3Vkc3RhdGUuRmFpbHVyZUgAQggK",
            "BmFjdGlvbiJ0CgpTaWRlRWZmZWN0EhQKDHNlcnZpY2VfbmFtZRgBIAEoCRIU",
            "Cgxjb21tYW5kX25hbWUYAiABKAkSJQoHcGF5bG9hZBgDIAEoCzIULmdvb2ds",
            "ZS5wcm90b2J1Zi5BbnkSEwoLc3luY2hyb25vdXMYBCABKAgibwoHQ29tbWFu",
            "ZBIRCgllbnRpdHlfaWQYASABKAkSCgoCaWQYAiABKAMSDAoEbmFtZRgDIAEo",
            "CRIlCgdwYXlsb2FkGAQgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIQCghz",
            "dHJlYW1lZBgFIAEoCCIwCg9TdHJlYW1DYW5jZWxsZWQSEQoJZW50aXR5X2lk",
            "GAEgASgJEgoKAmlkGAIgASgDIjIKB0ZhaWx1cmUSEgoKY29tbWFuZF9pZBgB",
            "IAEoAxITCgtkZXNjcmlwdGlvbhgCIAEoCSJwCgpFbnRpdHlTcGVjEg0KBXBy",
            "b3RvGAEgASgMEiQKCGVudGl0aWVzGAIgAygLMhIuY2xvdWRzdGF0ZS5FbnRp",
            "dHkSLQoMc2VydmljZV9pbmZvGAMgASgLMhcuY2xvdWRzdGF0ZS5TZXJ2aWNl",
            "SW5mbyKUAQoLU2VydmljZUluZm8SFAoMc2VydmljZV9uYW1lGAEgASgJEhcK",
            "D3NlcnZpY2VfdmVyc2lvbhgCIAEoCRIXCg9zZXJ2aWNlX3J1bnRpbWUYAyAB",
            "KAkSHAoUc3VwcG9ydF9saWJyYXJ5X25hbWUYBCABKAkSHwoXc3VwcG9ydF9s",
            "aWJyYXJ5X3ZlcnNpb24YBSABKAkiSwoGRW50aXR5EhMKC2VudGl0eV90eXBl",
            "GAEgASgJEhQKDHNlcnZpY2VfbmFtZRgCIAEoCRIWCg5wZXJzaXN0ZW5jZV9p",
            "ZBgDIAEoCSIkChFVc2VyRnVuY3Rpb25FcnJvchIPCgdtZXNzYWdlGAEgASgJ",
            "IpYBCglQcm94eUluZm8SHgoWcHJvdG9jb2xfbWFqb3JfdmVyc2lvbhgBIAEo",
            "BRIeChZwcm90b2NvbF9taW5vcl92ZXJzaW9uGAIgASgFEhIKCnByb3h5X25h",
            "bWUYAyABKAkSFQoNcHJveHlfdmVyc2lvbhgEIAEoCRIeChZzdXBwb3J0ZWRf",
            "ZW50aXR5X3R5cGVzGAUgAygJMpYBCg9FbnRpdHlEaXNjb3ZlcnkSOwoIZGlz",
            "Y292ZXISFS5jbG91ZHN0YXRlLlByb3h5SW5mbxoWLmNsb3Vkc3RhdGUuRW50",
            "aXR5U3BlYyIAEkYKC3JlcG9ydEVycm9yEh0uY2xvdWRzdGF0ZS5Vc2VyRnVu",
            "Y3Rpb25FcnJvchoWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eSIAQhgKFmlvLmNs",
            "b3Vkc3RhdGUucHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, pbr::FileDescriptor.DescriptorProtoFileDescriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Reply), global::Cloudstate.Reply.Parser, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Forward), global::Cloudstate.Forward.Parser, new[]{ "ServiceName", "CommandName", "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.ClientAction), global::Cloudstate.ClientAction.Parser, new[]{ "Reply", "Forward", "Failure" }, new[]{ "Action" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.SideEffect), global::Cloudstate.SideEffect.Parser, new[]{ "ServiceName", "CommandName", "Payload", "Synchronous" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Command), global::Cloudstate.Command.Parser, new[]{ "EntityId", "Id", "Name", "Payload", "Streamed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.StreamCancelled), global::Cloudstate.StreamCancelled.Parser, new[]{ "EntityId", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Failure), global::Cloudstate.Failure.Parser, new[]{ "CommandId", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.EntitySpec), global::Cloudstate.EntitySpec.Parser, new[]{ "Proto", "Entities", "ServiceInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.ServiceInfo), global::Cloudstate.ServiceInfo.Parser, new[]{ "ServiceName", "ServiceVersion", "ServiceRuntime", "SupportLibraryName", "SupportLibraryVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Entity), global::Cloudstate.Entity.Parser, new[]{ "EntityType", "ServiceName", "PersistenceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.UserFunctionError), global::Cloudstate.UserFunctionError.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.ProxyInfo), global::Cloudstate.ProxyInfo.Parser, new[]{ "ProtocolMajorVersion", "ProtocolMinorVersion", "ProxyName", "ProxyVersion", "SupportedEntityTypes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A reply to the sender.
  /// </summary>
  public sealed partial class Reply : pb::IMessage<Reply> {
    private static readonly pb::MessageParser<Reply> _parser = new pb::MessageParser<Reply>(() => new Reply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Reply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reply(Reply other) : this() {
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Reply Clone() {
      return new Reply(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any payload_;
    /// <summary>
    /// The reply payload
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Reply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Reply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payload_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Reply other) {
      if (other == null) {
        return;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (payload_ == null) {
              Payload = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Forwards handling of this request to another entity.
  /// </summary>
  public sealed partial class Forward : pb::IMessage<Forward> {
    private static readonly pb::MessageParser<Forward> _parser = new pb::MessageParser<Forward>(() => new Forward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Forward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forward(Forward other) : this() {
      serviceName_ = other.serviceName_;
      commandName_ = other.commandName_;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Forward Clone() {
      return new Forward(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service to forward to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command_name" field.</summary>
    public const int CommandNameFieldNumber = 2;
    private string commandName_ = "";
    /// <summary>
    /// The name of the command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommandName {
      get { return commandName_; }
      set {
        commandName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any payload_;
    /// <summary>
    /// The payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Forward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Forward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (CommandName != other.CommandName) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (CommandName.Length != 0) hash ^= CommandName.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (CommandName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CommandName);
      }
      if (payload_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (CommandName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandName);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Forward other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.CommandName.Length != 0) {
        CommandName = other.CommandName;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            CommandName = input.ReadString();
            break;
          }
          case 26: {
            if (payload_ == null) {
              Payload = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An action for the client
  /// </summary>
  public sealed partial class ClientAction : pb::IMessage<ClientAction> {
    private static readonly pb::MessageParser<ClientAction> _parser = new pb::MessageParser<ClientAction>(() => new ClientAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAction(ClientAction other) : this() {
      switch (other.ActionCase) {
        case ActionOneofCase.Reply:
          Reply = other.Reply.Clone();
          break;
        case ActionOneofCase.Forward:
          Forward = other.Forward.Clone();
          break;
        case ActionOneofCase.Failure:
          Failure = other.Failure.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientAction Clone() {
      return new ClientAction(this);
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 1;
    /// <summary>
    /// Send a reply
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Reply Reply {
      get { return actionCase_ == ActionOneofCase.Reply ? (global::Cloudstate.Reply) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Reply;
      }
    }

    /// <summary>Field number for the "forward" field.</summary>
    public const int ForwardFieldNumber = 2;
    /// <summary>
    /// Forward to another entity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Forward Forward {
      get { return actionCase_ == ActionOneofCase.Forward ? (global::Cloudstate.Forward) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Forward;
      }
    }

    /// <summary>Field number for the "failure" field.</summary>
    public const int FailureFieldNumber = 3;
    /// <summary>
    /// Send a failure to the client
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Failure Failure {
      get { return actionCase_ == ActionOneofCase.Failure ? (global::Cloudstate.Failure) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Failure;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      Reply = 1,
      Forward = 2,
      Failure = 3,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reply, other.Reply)) return false;
      if (!object.Equals(Forward, other.Forward)) return false;
      if (!object.Equals(Failure, other.Failure)) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.Reply) hash ^= Reply.GetHashCode();
      if (actionCase_ == ActionOneofCase.Forward) hash ^= Forward.GetHashCode();
      if (actionCase_ == ActionOneofCase.Failure) hash ^= Failure.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (actionCase_ == ActionOneofCase.Reply) {
        output.WriteRawTag(10);
        output.WriteMessage(Reply);
      }
      if (actionCase_ == ActionOneofCase.Forward) {
        output.WriteRawTag(18);
        output.WriteMessage(Forward);
      }
      if (actionCase_ == ActionOneofCase.Failure) {
        output.WriteRawTag(26);
        output.WriteMessage(Failure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.Reply) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reply);
      }
      if (actionCase_ == ActionOneofCase.Forward) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Forward);
      }
      if (actionCase_ == ActionOneofCase.Failure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientAction other) {
      if (other == null) {
        return;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.Reply:
          if (Reply == null) {
            Reply = new global::Cloudstate.Reply();
          }
          Reply.MergeFrom(other.Reply);
          break;
        case ActionOneofCase.Forward:
          if (Forward == null) {
            Forward = new global::Cloudstate.Forward();
          }
          Forward.MergeFrom(other.Forward);
          break;
        case ActionOneofCase.Failure:
          if (Failure == null) {
            Failure = new global::Cloudstate.Failure();
          }
          Failure.MergeFrom(other.Failure);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Reply subBuilder = new global::Cloudstate.Reply();
            if (actionCase_ == ActionOneofCase.Reply) {
              subBuilder.MergeFrom(Reply);
            }
            input.ReadMessage(subBuilder);
            Reply = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Forward subBuilder = new global::Cloudstate.Forward();
            if (actionCase_ == ActionOneofCase.Forward) {
              subBuilder.MergeFrom(Forward);
            }
            input.ReadMessage(subBuilder);
            Forward = subBuilder;
            break;
          }
          case 26: {
            global::Cloudstate.Failure subBuilder = new global::Cloudstate.Failure();
            if (actionCase_ == ActionOneofCase.Failure) {
              subBuilder.MergeFrom(Failure);
            }
            input.ReadMessage(subBuilder);
            Failure = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A side effect to be done after this command is handled.
  /// </summary>
  public sealed partial class SideEffect : pb::IMessage<SideEffect> {
    private static readonly pb::MessageParser<SideEffect> _parser = new pb::MessageParser<SideEffect>(() => new SideEffect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SideEffect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideEffect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideEffect(SideEffect other) : this() {
      serviceName_ = other.serviceName_;
      commandName_ = other.commandName_;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      synchronous_ = other.synchronous_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SideEffect Clone() {
      return new SideEffect(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service to perform the side effect on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command_name" field.</summary>
    public const int CommandNameFieldNumber = 2;
    private string commandName_ = "";
    /// <summary>
    /// The name of the command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CommandName {
      get { return commandName_; }
      set {
        commandName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any payload_;
    /// <summary>
    /// The payload of the command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "synchronous" field.</summary>
    public const int SynchronousFieldNumber = 4;
    private bool synchronous_;
    /// <summary>
    /// Whether this side effect should be performed synchronously, ie, before the reply is eventually
    /// sent, or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Synchronous {
      get { return synchronous_; }
      set {
        synchronous_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SideEffect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SideEffect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (CommandName != other.CommandName) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      if (Synchronous != other.Synchronous) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (CommandName.Length != 0) hash ^= CommandName.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (Synchronous != false) hash ^= Synchronous.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (CommandName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CommandName);
      }
      if (payload_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Payload);
      }
      if (Synchronous != false) {
        output.WriteRawTag(32);
        output.WriteBool(Synchronous);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (CommandName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CommandName);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (Synchronous != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SideEffect other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.CommandName.Length != 0) {
        CommandName = other.CommandName;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.Synchronous != false) {
        Synchronous = other.Synchronous;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            CommandName = input.ReadString();
            break;
          }
          case 26: {
            if (payload_ == null) {
              Payload = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Payload);
            break;
          }
          case 32: {
            Synchronous = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A command. For each command received, a reply must be sent with a matching command id.
  /// </summary>
  public sealed partial class Command : pb::IMessage<Command> {
    private static readonly pb::MessageParser<Command> _parser = new pb::MessageParser<Command>(() => new Command());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Command> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command(Command other) : this() {
      entityId_ = other.entityId_;
      id_ = other.id_;
      name_ = other.name_;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      streamed_ = other.streamed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Command Clone() {
      return new Command(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private string entityId_ = "";
    /// <summary>
    /// The ID of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private long id_;
    /// <summary>
    /// A command id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Command name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Any payload_;
    /// <summary>
    /// The command payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "streamed" field.</summary>
    public const int StreamedFieldNumber = 5;
    private bool streamed_;
    /// <summary>
    /// Whether the command is streamed or not
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Streamed {
      get { return streamed_; }
      set {
        streamed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Command);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Command other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      if (Streamed != other.Streamed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (Streamed != false) hash ^= Streamed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Id != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (payload_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Payload);
      }
      if (Streamed != false) {
        output.WriteRawTag(40);
        output.WriteBool(Streamed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (Streamed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Command other) {
      if (other == null) {
        return;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.Streamed != false) {
        Streamed = other.Streamed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            if (payload_ == null) {
              Payload = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Payload);
            break;
          }
          case 40: {
            Streamed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamCancelled : pb::IMessage<StreamCancelled> {
    private static readonly pb::MessageParser<StreamCancelled> _parser = new pb::MessageParser<StreamCancelled>(() => new StreamCancelled());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamCancelled> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCancelled() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCancelled(StreamCancelled other) : this() {
      entityId_ = other.entityId_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamCancelled Clone() {
      return new StreamCancelled(this);
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 1;
    private string entityId_ = "";
    /// <summary>
    /// The ID of the entity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private long id_;
    /// <summary>
    /// The command id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamCancelled);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamCancelled other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityId != other.EntityId) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityId);
      }
      if (Id != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamCancelled other) {
      if (other == null) {
        return;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntityId = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A failure reply. If this is returned, it will be translated into a gRPC unknown
  /// error with the corresponding description if supplied.
  /// </summary>
  public sealed partial class Failure : pb::IMessage<Failure> {
    private static readonly pb::MessageParser<Failure> _parser = new pb::MessageParser<Failure>(() => new Failure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Failure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Failure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Failure(Failure other) : this() {
      commandId_ = other.commandId_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Failure Clone() {
      return new Failure(this);
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private long commandId_;
    /// <summary>
    /// The id of the command being replied to. Must match the input command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// A description of the error.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Failure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Failure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId != 0L) hash ^= CommandId.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommandId);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommandId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommandId);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Failure other) {
      if (other == null) {
        return;
      }
      if (other.CommandId != 0L) {
        CommandId = other.CommandId;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandId = input.ReadInt64();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntitySpec : pb::IMessage<EntitySpec> {
    private static readonly pb::MessageParser<EntitySpec> _parser = new pb::MessageParser<EntitySpec>(() => new EntitySpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntitySpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySpec(EntitySpec other) : this() {
      proto_ = other.proto_;
      entities_ = other.entities_.Clone();
      serviceInfo_ = other.serviceInfo_ != null ? other.serviceInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySpec Clone() {
      return new EntitySpec(this);
    }

    /// <summary>Field number for the "proto" field.</summary>
    public const int ProtoFieldNumber = 1;
    private pb::ByteString proto_ = pb::ByteString.Empty;
    /// <summary>
    /// This should be the Descriptors.FileDescriptorSet in proto serialized from as generated by:
    /// protoc --include_imports \
    /// --proto_path=&lt;proto file directory> \
    /// --descriptor_set_out=user-function.desc \
    /// &lt;path to .proto files>
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Proto {
      get { return proto_; }
      set {
        proto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entities" field.</summary>
    public const int EntitiesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cloudstate.Entity> _repeated_entities_codec
        = pb::FieldCodec.ForMessage(18, global::Cloudstate.Entity.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.Entity> entities_ = new pbc::RepeatedField<global::Cloudstate.Entity>();
    /// <summary>
    /// The entities being served.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.Entity> Entities {
      get { return entities_; }
    }

    /// <summary>Field number for the "service_info" field.</summary>
    public const int ServiceInfoFieldNumber = 3;
    private global::Cloudstate.ServiceInfo serviceInfo_;
    /// <summary>
    /// Optional information about the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.ServiceInfo ServiceInfo {
      get { return serviceInfo_; }
      set {
        serviceInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntitySpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntitySpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Proto != other.Proto) return false;
      if(!entities_.Equals(other.entities_)) return false;
      if (!object.Equals(ServiceInfo, other.ServiceInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Proto.Length != 0) hash ^= Proto.GetHashCode();
      hash ^= entities_.GetHashCode();
      if (serviceInfo_ != null) hash ^= ServiceInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Proto.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Proto);
      }
      entities_.WriteTo(output, _repeated_entities_codec);
      if (serviceInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ServiceInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Proto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Proto);
      }
      size += entities_.CalculateSize(_repeated_entities_codec);
      if (serviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ServiceInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntitySpec other) {
      if (other == null) {
        return;
      }
      if (other.Proto.Length != 0) {
        Proto = other.Proto;
      }
      entities_.Add(other.entities_);
      if (other.serviceInfo_ != null) {
        if (serviceInfo_ == null) {
          ServiceInfo = new global::Cloudstate.ServiceInfo();
        }
        ServiceInfo.MergeFrom(other.ServiceInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Proto = input.ReadBytes();
            break;
          }
          case 18: {
            entities_.AddEntriesFrom(input, _repeated_entities_codec);
            break;
          }
          case 26: {
            if (serviceInfo_ == null) {
              ServiceInfo = new global::Cloudstate.ServiceInfo();
            }
            input.ReadMessage(ServiceInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Information about the service that proxy is proxying to.
  /// All of the information in here is optional. It may be useful for debug purposes.
  /// </summary>
  public sealed partial class ServiceInfo : pb::IMessage<ServiceInfo> {
    private static readonly pb::MessageParser<ServiceInfo> _parser = new pb::MessageParser<ServiceInfo>(() => new ServiceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServiceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInfo(ServiceInfo other) : this() {
      serviceName_ = other.serviceName_;
      serviceVersion_ = other.serviceVersion_;
      serviceRuntime_ = other.serviceRuntime_;
      supportLibraryName_ = other.supportLibraryName_;
      supportLibraryVersion_ = other.supportLibraryVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServiceInfo Clone() {
      return new ServiceInfo(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service, eg, "shopping-cart".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_version" field.</summary>
    public const int ServiceVersionFieldNumber = 2;
    private string serviceVersion_ = "";
    /// <summary>
    /// The version of the service.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceVersion {
      get { return serviceVersion_; }
      set {
        serviceVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_runtime" field.</summary>
    public const int ServiceRuntimeFieldNumber = 3;
    private string serviceRuntime_ = "";
    /// <summary>
    /// A description of the runtime for the service. Can be anything, but examples might be:
    /// - node v10.15.2
    /// - OpenJDK Runtime Environment 1.8.0_192-b12
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceRuntime {
      get { return serviceRuntime_; }
      set {
        serviceRuntime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "support_library_name" field.</summary>
    public const int SupportLibraryNameFieldNumber = 4;
    private string supportLibraryName_ = "";
    /// <summary>
    /// If using a support library, the name of that library, eg "cloudstate"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupportLibraryName {
      get { return supportLibraryName_; }
      set {
        supportLibraryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "support_library_version" field.</summary>
    public const int SupportLibraryVersionFieldNumber = 5;
    private string supportLibraryVersion_ = "";
    /// <summary>
    /// The version of the support library being used.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SupportLibraryVersion {
      get { return supportLibraryVersion_; }
      set {
        supportLibraryVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServiceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServiceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (ServiceVersion != other.ServiceVersion) return false;
      if (ServiceRuntime != other.ServiceRuntime) return false;
      if (SupportLibraryName != other.SupportLibraryName) return false;
      if (SupportLibraryVersion != other.SupportLibraryVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (ServiceVersion.Length != 0) hash ^= ServiceVersion.GetHashCode();
      if (ServiceRuntime.Length != 0) hash ^= ServiceRuntime.GetHashCode();
      if (SupportLibraryName.Length != 0) hash ^= SupportLibraryName.GetHashCode();
      if (SupportLibraryVersion.Length != 0) hash ^= SupportLibraryVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (ServiceVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceVersion);
      }
      if (ServiceRuntime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceRuntime);
      }
      if (SupportLibraryName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SupportLibraryName);
      }
      if (SupportLibraryVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SupportLibraryVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (ServiceVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceVersion);
      }
      if (ServiceRuntime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceRuntime);
      }
      if (SupportLibraryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SupportLibraryName);
      }
      if (SupportLibraryVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SupportLibraryVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServiceInfo other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.ServiceVersion.Length != 0) {
        ServiceVersion = other.ServiceVersion;
      }
      if (other.ServiceRuntime.Length != 0) {
        ServiceRuntime = other.ServiceRuntime;
      }
      if (other.SupportLibraryName.Length != 0) {
        SupportLibraryName = other.SupportLibraryName;
      }
      if (other.SupportLibraryVersion.Length != 0) {
        SupportLibraryVersion = other.SupportLibraryVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            ServiceVersion = input.ReadString();
            break;
          }
          case 26: {
            ServiceRuntime = input.ReadString();
            break;
          }
          case 34: {
            SupportLibraryName = input.ReadString();
            break;
          }
          case 42: {
            SupportLibraryVersion = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Entity : pb::IMessage<Entity> {
    private static readonly pb::MessageParser<Entity> _parser = new pb::MessageParser<Entity>(() => new Entity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Entity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity(Entity other) : this() {
      entityType_ = other.entityType_;
      serviceName_ = other.serviceName_;
      persistenceId_ = other.persistenceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Entity Clone() {
      return new Entity(this);
    }

    /// <summary>Field number for the "entity_type" field.</summary>
    public const int EntityTypeFieldNumber = 1;
    private string entityType_ = "";
    /// <summary>
    /// The type of entity. By convention, this should be a fully qualified entity protocol grpc
    /// service name, for example, cloudstate.eventsourced.EventSourced.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityType {
      get { return entityType_; }
      set {
        entityType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 2;
    private string serviceName_ = "";
    /// <summary>
    /// The name of the service to load from the protobuf file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "persistence_id" field.</summary>
    public const int PersistenceIdFieldNumber = 3;
    private string persistenceId_ = "";
    /// <summary>
    /// The ID to namespace state by. How this is used depends on the type of entity, for example,
    /// event sourced entities will prefix this to the persistence id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersistenceId {
      get { return persistenceId_; }
      set {
        persistenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Entity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Entity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EntityType != other.EntityType) return false;
      if (ServiceName != other.ServiceName) return false;
      if (PersistenceId != other.PersistenceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EntityType.Length != 0) hash ^= EntityType.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (PersistenceId.Length != 0) hash ^= PersistenceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EntityType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EntityType);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServiceName);
      }
      if (PersistenceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PersistenceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EntityType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityType);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (PersistenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersistenceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Entity other) {
      if (other == null) {
        return;
      }
      if (other.EntityType.Length != 0) {
        EntityType = other.EntityType;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.PersistenceId.Length != 0) {
        PersistenceId = other.PersistenceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EntityType = input.ReadString();
            break;
          }
          case 18: {
            ServiceName = input.ReadString();
            break;
          }
          case 26: {
            PersistenceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserFunctionError : pb::IMessage<UserFunctionError> {
    private static readonly pb::MessageParser<UserFunctionError> _parser = new pb::MessageParser<UserFunctionError>(() => new UserFunctionError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserFunctionError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFunctionError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFunctionError(UserFunctionError other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFunctionError Clone() {
      return new UserFunctionError(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserFunctionError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserFunctionError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserFunctionError other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ProxyInfo : pb::IMessage<ProxyInfo> {
    private static readonly pb::MessageParser<ProxyInfo> _parser = new pb::MessageParser<ProxyInfo>(() => new ProxyInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProxyInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.EntityReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProxyInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProxyInfo(ProxyInfo other) : this() {
      protocolMajorVersion_ = other.protocolMajorVersion_;
      protocolMinorVersion_ = other.protocolMinorVersion_;
      proxyName_ = other.proxyName_;
      proxyVersion_ = other.proxyVersion_;
      supportedEntityTypes_ = other.supportedEntityTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProxyInfo Clone() {
      return new ProxyInfo(this);
    }

    /// <summary>Field number for the "protocol_major_version" field.</summary>
    public const int ProtocolMajorVersionFieldNumber = 1;
    private int protocolMajorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolMajorVersion {
      get { return protocolMajorVersion_; }
      set {
        protocolMajorVersion_ = value;
      }
    }

    /// <summary>Field number for the "protocol_minor_version" field.</summary>
    public const int ProtocolMinorVersionFieldNumber = 2;
    private int protocolMinorVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ProtocolMinorVersion {
      get { return protocolMinorVersion_; }
      set {
        protocolMinorVersion_ = value;
      }
    }

    /// <summary>Field number for the "proxy_name" field.</summary>
    public const int ProxyNameFieldNumber = 3;
    private string proxyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProxyName {
      get { return proxyName_; }
      set {
        proxyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "proxy_version" field.</summary>
    public const int ProxyVersionFieldNumber = 4;
    private string proxyVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProxyVersion {
      get { return proxyVersion_; }
      set {
        proxyVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "supported_entity_types" field.</summary>
    public const int SupportedEntityTypesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_supportedEntityTypes_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> supportedEntityTypes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SupportedEntityTypes {
      get { return supportedEntityTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProxyInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProxyInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProtocolMajorVersion != other.ProtocolMajorVersion) return false;
      if (ProtocolMinorVersion != other.ProtocolMinorVersion) return false;
      if (ProxyName != other.ProxyName) return false;
      if (ProxyVersion != other.ProxyVersion) return false;
      if(!supportedEntityTypes_.Equals(other.supportedEntityTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProtocolMajorVersion != 0) hash ^= ProtocolMajorVersion.GetHashCode();
      if (ProtocolMinorVersion != 0) hash ^= ProtocolMinorVersion.GetHashCode();
      if (ProxyName.Length != 0) hash ^= ProxyName.GetHashCode();
      if (ProxyVersion.Length != 0) hash ^= ProxyVersion.GetHashCode();
      hash ^= supportedEntityTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProtocolMajorVersion != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ProtocolMajorVersion);
      }
      if (ProtocolMinorVersion != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ProtocolMinorVersion);
      }
      if (ProxyName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProxyName);
      }
      if (ProxyVersion.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ProxyVersion);
      }
      supportedEntityTypes_.WriteTo(output, _repeated_supportedEntityTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProtocolMajorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolMajorVersion);
      }
      if (ProtocolMinorVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ProtocolMinorVersion);
      }
      if (ProxyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyName);
      }
      if (ProxyVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProxyVersion);
      }
      size += supportedEntityTypes_.CalculateSize(_repeated_supportedEntityTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProxyInfo other) {
      if (other == null) {
        return;
      }
      if (other.ProtocolMajorVersion != 0) {
        ProtocolMajorVersion = other.ProtocolMajorVersion;
      }
      if (other.ProtocolMinorVersion != 0) {
        ProtocolMinorVersion = other.ProtocolMinorVersion;
      }
      if (other.ProxyName.Length != 0) {
        ProxyName = other.ProxyName;
      }
      if (other.ProxyVersion.Length != 0) {
        ProxyVersion = other.ProxyVersion;
      }
      supportedEntityTypes_.Add(other.supportedEntityTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProtocolMajorVersion = input.ReadInt32();
            break;
          }
          case 16: {
            ProtocolMinorVersion = input.ReadInt32();
            break;
          }
          case 26: {
            ProxyName = input.ReadString();
            break;
          }
          case 34: {
            ProxyVersion = input.ReadString();
            break;
          }
          case 42: {
            supportedEntityTypes_.AddEntriesFrom(input, _repeated_supportedEntityTypes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
