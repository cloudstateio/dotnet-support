// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cloudstate/crdt.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cloudstate.Crdt {

  /// <summary>Holder for reflection information generated from cloudstate/crdt.proto</summary>
  public static partial class CrdtReflection {

    #region Descriptor
    /// <summary>File descriptor for cloudstate/crdt.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CrdtReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChVjbG91ZHN0YXRlL2NyZHQucHJvdG8SD2Nsb3Vkc3RhdGUuY3JkdBoZZ29v",
            "Z2xlL3Byb3RvYnVmL2FueS5wcm90bxoXY2xvdWRzdGF0ZS9lbnRpdHkucHJv",
            "dG8isQIKDENyZHRTdHJlYW1JbhIpCgRpbml0GAEgASgLMhkuY2xvdWRzdGF0",
            "ZS5jcmR0LkNyZHRJbml0SAASKwoFc3RhdGUYAiABKAsyGi5jbG91ZHN0YXRl",
            "LmNyZHQuQ3JkdFN0YXRlSAASLQoHY2hhbmdlZBgDIAEoCzIaLmNsb3Vkc3Rh",
            "dGUuY3JkdC5DcmR0RGVsdGFIABIuCgdkZWxldGVkGAQgASgLMhsuY2xvdWRz",
            "dGF0ZS5jcmR0LkNyZHREZWxldGVIABImCgdjb21tYW5kGAUgASgLMhMuY2xv",
            "dWRzdGF0ZS5Db21tYW5kSAASNwoQc3RyZWFtX2NhbmNlbGxlZBgGIAEoCzIb",
            "LmNsb3Vkc3RhdGUuU3RyZWFtQ2FuY2VsbGVkSABCCQoHbWVzc2FnZSKEAgoN",
            "Q3JkdFN0cmVhbU91dBIrCgVyZXBseRgBIAEoCzIaLmNsb3Vkc3RhdGUuY3Jk",
            "dC5DcmR0UmVwbHlIABJAChBzdHJlYW1lZF9tZXNzYWdlGAIgASgLMiQuY2xv",
            "dWRzdGF0ZS5jcmR0LkNyZHRTdHJlYW1lZE1lc3NhZ2VIABJRChlzdHJlYW1f",
            "Y2FuY2VsbGVkX3Jlc3BvbnNlGAMgASgLMiwuY2xvdWRzdGF0ZS5jcmR0LkNy",
            "ZHRTdHJlYW1DYW5jZWxsZWRSZXNwb25zZUgAEiYKB2ZhaWx1cmUYBCABKAsy",
            "Ey5jbG91ZHN0YXRlLkZhaWx1cmVIAEIJCgdtZXNzYWdlIpgDCglDcmR0U3Rh",
            "dGUSMgoIZ2NvdW50ZXIYASABKAsyHi5jbG91ZHN0YXRlLmNyZHQuR0NvdW50",
            "ZXJTdGF0ZUgAEjQKCXBuY291bnRlchgCIAEoCzIfLmNsb3Vkc3RhdGUuY3Jk",
            "dC5QTkNvdW50ZXJTdGF0ZUgAEioKBGdzZXQYAyABKAsyGi5jbG91ZHN0YXRl",
            "LmNyZHQuR1NldFN0YXRlSAASLAoFb3JzZXQYBCABKAsyGy5jbG91ZHN0YXRl",
            "LmNyZHQuT1JTZXRTdGF0ZUgAEjgKC2x3d3JlZ2lzdGVyGAUgASgLMiEuY2xv",
            "dWRzdGF0ZS5jcmR0LkxXV1JlZ2lzdGVyU3RhdGVIABIqCgRmbGFnGAYgASgL",
            "MhouY2xvdWRzdGF0ZS5jcmR0LkZsYWdTdGF0ZUgAEiwKBW9ybWFwGAcgASgL",
            "MhsuY2xvdWRzdGF0ZS5jcmR0Lk9STWFwU3RhdGVIABIqCgR2b3RlGAggASgL",
            "MhouY2xvdWRzdGF0ZS5jcmR0LlZvdGVTdGF0ZUgAQgcKBXN0YXRlIh4KDUdD",
            "b3VudGVyU3RhdGUSDQoFdmFsdWUYASABKAQiHwoOUE5Db3VudGVyU3RhdGUS",
            "DQoFdmFsdWUYASABKAMiMAoJR1NldFN0YXRlEiMKBWl0ZW1zGAEgAygLMhQu",
            "Z29vZ2xlLnByb3RvYnVmLkFueSIxCgpPUlNldFN0YXRlEiMKBWl0ZW1zGAEg",
            "AygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSJ+ChBMV1dSZWdpc3RlclN0YXRl",
            "EiMKBXZhbHVlGAEgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIpCgVjbG9j",
            "axgCIAEoDjIaLmNsb3Vkc3RhdGUuY3JkdC5DcmR0Q2xvY2sSGgoSY3VzdG9t",
            "X2Nsb2NrX3ZhbHVlGAMgASgDIhoKCUZsYWdTdGF0ZRINCgV2YWx1ZRgBIAEo",
            "CCI6CgpPUk1hcFN0YXRlEiwKB2VudHJpZXMYASADKAsyGy5jbG91ZHN0YXRl",
            "LmNyZHQuT1JNYXBFbnRyeSJaCgpPUk1hcEVudHJ5EiEKA2tleRgBIAEoCzIU",
            "Lmdvb2dsZS5wcm90b2J1Zi5BbnkSKQoFdmFsdWUYAiABKAsyGi5jbG91ZHN0",
            "YXRlLmNyZHQuQ3JkdFN0YXRlIkcKCVZvdGVTdGF0ZRIRCgl2b3Rlc19mb3IY",
            "ASABKA0SFAoMdG90YWxfdm90ZXJzGAIgASgNEhEKCXNlbGZfdm90ZRgDIAEo",
            "CCKYAwoJQ3JkdERlbHRhEjIKCGdjb3VudGVyGAEgASgLMh4uY2xvdWRzdGF0",
            "ZS5jcmR0LkdDb3VudGVyRGVsdGFIABI0CglwbmNvdW50ZXIYAiABKAsyHy5j",
            "bG91ZHN0YXRlLmNyZHQuUE5Db3VudGVyRGVsdGFIABIqCgRnc2V0GAMgASgL",
            "MhouY2xvdWRzdGF0ZS5jcmR0LkdTZXREZWx0YUgAEiwKBW9yc2V0GAQgASgL",
            "MhsuY2xvdWRzdGF0ZS5jcmR0Lk9SU2V0RGVsdGFIABI4Cgtsd3dyZWdpc3Rl",
            "chgFIAEoCzIhLmNsb3Vkc3RhdGUuY3JkdC5MV1dSZWdpc3RlckRlbHRhSAAS",
            "KgoEZmxhZxgGIAEoCzIaLmNsb3Vkc3RhdGUuY3JkdC5GbGFnRGVsdGFIABIs",
            "CgVvcm1hcBgHIAEoCzIbLmNsb3Vkc3RhdGUuY3JkdC5PUk1hcERlbHRhSAAS",
            "KgoEdm90ZRgIIAEoCzIaLmNsb3Vkc3RhdGUuY3JkdC5Wb3RlRGVsdGFIAEIH",
            "CgVkZWx0YSIiCg1HQ291bnRlckRlbHRhEhEKCWluY3JlbWVudBgBIAEoBCIg",
            "Cg5QTkNvdW50ZXJEZWx0YRIOCgZjaGFuZ2UYASABKBIiMAoJR1NldERlbHRh",
            "EiMKBWFkZGVkGAEgAygLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSJpCgpPUlNl",
            "dERlbHRhEg8KB2NsZWFyZWQYASABKAgSJQoHcmVtb3ZlZBgCIAMoCzIULmdv",
            "b2dsZS5wcm90b2J1Zi5BbnkSIwoFYWRkZWQYAyADKAsyFC5nb29nbGUucHJv",
            "dG9idWYuQW55In4KEExXV1JlZ2lzdGVyRGVsdGESIwoFdmFsdWUYASABKAsy",
            "FC5nb29nbGUucHJvdG9idWYuQW55EikKBWNsb2NrGAIgASgOMhouY2xvdWRz",
            "dGF0ZS5jcmR0LkNyZHRDbG9jaxIaChJjdXN0b21fY2xvY2tfdmFsdWUYAyAB",
            "KAMiGgoJRmxhZ0RlbHRhEg0KBXZhbHVlGAEgASgIIqMBCgpPUk1hcERlbHRh",
            "Eg8KB2NsZWFyZWQYASABKAgSJQoHcmVtb3ZlZBgCIAMoCzIULmdvb2dsZS5w",
            "cm90b2J1Zi5BbnkSMQoHdXBkYXRlZBgDIAMoCzIgLmNsb3Vkc3RhdGUuY3Jk",
            "dC5PUk1hcEVudHJ5RGVsdGESKgoFYWRkZWQYBCADKAsyGy5jbG91ZHN0YXRl",
            "LmNyZHQuT1JNYXBFbnRyeSJfCg9PUk1hcEVudHJ5RGVsdGESIQoDa2V5GAEg",
            "ASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueRIpCgVkZWx0YRgCIAEoCzIaLmNs",
            "b3Vkc3RhdGUuY3JkdC5DcmR0RGVsdGEiRwoJVm90ZURlbHRhEhEKCXNlbGZf",
            "dm90ZRgBIAEoCBIRCgl2b3Rlc19mb3IYAiABKAUSFAoMdG90YWxfdm90ZXJz",
            "GAMgASgFIl4KCENyZHRJbml0EhQKDHNlcnZpY2VfbmFtZRgBIAEoCRIRCgll",
            "bnRpdHlfaWQYAiABKAkSKQoFc3RhdGUYAyABKAsyGi5jbG91ZHN0YXRlLmNy",
            "ZHQuQ3JkdFN0YXRlIgwKCkNyZHREZWxldGUiyAEKCUNyZHRSZXBseRISCgpj",
            "b21tYW5kX2lkGAEgASgDEi8KDWNsaWVudF9hY3Rpb24YAiABKAsyGC5jbG91",
            "ZHN0YXRlLkNsaWVudEFjdGlvbhIsCgxzaWRlX2VmZmVjdHMYBCADKAsyFi5j",
            "bG91ZHN0YXRlLlNpZGVFZmZlY3QSNgoMc3RhdGVfYWN0aW9uGAUgASgLMiAu",
            "Y2xvdWRzdGF0ZS5jcmR0LkNyZHRTdGF0ZUFjdGlvbhIQCghzdHJlYW1lZBgG",
            "IAEoCCLoAQoPQ3JkdFN0YXRlQWN0aW9uEiwKBmNyZWF0ZRgFIAEoCzIaLmNs",
            "b3Vkc3RhdGUuY3JkdC5DcmR0U3RhdGVIABIsCgZ1cGRhdGUYBiABKAsyGi5j",
            "bG91ZHN0YXRlLmNyZHQuQ3JkdERlbHRhSAASLQoGZGVsZXRlGAcgASgLMhsu",
            "Y2xvdWRzdGF0ZS5jcmR0LkNyZHREZWxldGVIABJAChF3cml0ZV9jb25zaXN0",
            "ZW5jeRgIIAEoDjIlLmNsb3Vkc3RhdGUuY3JkdC5DcmR0V3JpdGVDb25zaXN0",
            "ZW5jeUIICgZhY3Rpb24inAEKE0NyZHRTdHJlYW1lZE1lc3NhZ2USEgoKY29t",
            "bWFuZF9pZBgBIAEoAxIvCg1jbGllbnRfYWN0aW9uGAIgASgLMhguY2xvdWRz",
            "dGF0ZS5DbGllbnRBY3Rpb24SLAoMc2lkZV9lZmZlY3RzGAMgAygLMhYuY2xv",
            "dWRzdGF0ZS5TaWRlRWZmZWN0EhIKCmVuZF9zdHJlYW0YBCABKAgilwEKG0Ny",
            "ZHRTdHJlYW1DYW5jZWxsZWRSZXNwb25zZRISCgpjb21tYW5kX2lkGAEgASgD",
            "EiwKDHNpZGVfZWZmZWN0cxgCIAMoCzIWLmNsb3Vkc3RhdGUuU2lkZUVmZmVj",
            "dBI2CgxzdGF0ZV9hY3Rpb24YAyABKAsyIC5jbG91ZHN0YXRlLmNyZHQuQ3Jk",
            "dFN0YXRlQWN0aW9uKjgKFENyZHRXcml0ZUNvbnNpc3RlbmN5EgkKBUxPQ0FM",
            "EAASDAoITUFKT1JJVFkQARIHCgNBTEwQAipMCglDcmR0Q2xvY2sSCwoHREVG",
            "QVVMVBAAEgsKB1JFVkVSU0UQARIKCgZDVVNUT00QAhIZChVDVVNUT01fQVVU",
            "T19JTkNSRU1FTlQQAzJTCgRDcmR0EksKBmhhbmRsZRIdLmNsb3Vkc3RhdGUu",
            "Y3JkdC5DcmR0U3RyZWFtSW4aHi5jbG91ZHN0YXRlLmNyZHQuQ3JkdFN0cmVh",
            "bU91dCgBMAFCGAoWaW8uY2xvdWRzdGF0ZS5wcm90b2NvbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Cloudstate.EntityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Cloudstate.Crdt.CrdtWriteConsistency), typeof(global::Cloudstate.Crdt.CrdtClock), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtStreamIn), global::Cloudstate.Crdt.CrdtStreamIn.Parser, new[]{ "Init", "State", "Changed", "Deleted", "Command", "StreamCancelled" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtStreamOut), global::Cloudstate.Crdt.CrdtStreamOut.Parser, new[]{ "Reply", "StreamedMessage", "StreamCancelledResponse", "Failure" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtState), global::Cloudstate.Crdt.CrdtState.Parser, new[]{ "Gcounter", "Pncounter", "Gset", "Orset", "Lwwregister", "Flag", "Ormap", "Vote" }, new[]{ "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.GCounterState), global::Cloudstate.Crdt.GCounterState.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.PNCounterState), global::Cloudstate.Crdt.PNCounterState.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.GSetState), global::Cloudstate.Crdt.GSetState.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.ORSetState), global::Cloudstate.Crdt.ORSetState.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.LWWRegisterState), global::Cloudstate.Crdt.LWWRegisterState.Parser, new[]{ "Value", "Clock", "CustomClockValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.FlagState), global::Cloudstate.Crdt.FlagState.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.ORMapState), global::Cloudstate.Crdt.ORMapState.Parser, new[]{ "Entries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.ORMapEntry), global::Cloudstate.Crdt.ORMapEntry.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.VoteState), global::Cloudstate.Crdt.VoteState.Parser, new[]{ "VotesFor", "TotalVoters", "SelfVote" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtDelta), global::Cloudstate.Crdt.CrdtDelta.Parser, new[]{ "Gcounter", "Pncounter", "Gset", "Orset", "Lwwregister", "Flag", "Ormap", "Vote" }, new[]{ "Delta" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.GCounterDelta), global::Cloudstate.Crdt.GCounterDelta.Parser, new[]{ "Increment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.PNCounterDelta), global::Cloudstate.Crdt.PNCounterDelta.Parser, new[]{ "Change" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.GSetDelta), global::Cloudstate.Crdt.GSetDelta.Parser, new[]{ "Added" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.ORSetDelta), global::Cloudstate.Crdt.ORSetDelta.Parser, new[]{ "Cleared", "Removed", "Added" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.LWWRegisterDelta), global::Cloudstate.Crdt.LWWRegisterDelta.Parser, new[]{ "Value", "Clock", "CustomClockValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.FlagDelta), global::Cloudstate.Crdt.FlagDelta.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.ORMapDelta), global::Cloudstate.Crdt.ORMapDelta.Parser, new[]{ "Cleared", "Removed", "Updated", "Added" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.ORMapEntryDelta), global::Cloudstate.Crdt.ORMapEntryDelta.Parser, new[]{ "Key", "Delta" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.VoteDelta), global::Cloudstate.Crdt.VoteDelta.Parser, new[]{ "SelfVote", "VotesFor", "TotalVoters" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtInit), global::Cloudstate.Crdt.CrdtInit.Parser, new[]{ "ServiceName", "EntityId", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtDelete), global::Cloudstate.Crdt.CrdtDelete.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtReply), global::Cloudstate.Crdt.CrdtReply.Parser, new[]{ "CommandId", "ClientAction", "SideEffects", "StateAction", "Streamed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtStateAction), global::Cloudstate.Crdt.CrdtStateAction.Parser, new[]{ "Create", "Update", "Delete", "WriteConsistency" }, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtStreamedMessage), global::Cloudstate.Crdt.CrdtStreamedMessage.Parser, new[]{ "CommandId", "ClientAction", "SideEffects", "EndStream" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Crdt.CrdtStreamCancelledResponse), global::Cloudstate.Crdt.CrdtStreamCancelledResponse.Parser, new[]{ "CommandId", "SideEffects", "StateAction" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CrdtWriteConsistency {
    [pbr::OriginalName("LOCAL")] Local = 0,
    [pbr::OriginalName("MAJORITY")] Majority = 1,
    [pbr::OriginalName("ALL")] All = 2,
  }

  public enum CrdtClock {
    /// <summary>
    /// Use the default clock for deciding the last write, which is the system clocks
    /// milliseconds since epoch.
    /// </summary>
    [pbr::OriginalName("DEFAULT")] Default = 0,
    /// <summary>
    /// Use the reverse semantics with the default clock, to enable first write wins.
    /// </summary>
    [pbr::OriginalName("REVERSE")] Reverse = 1,
    /// <summary>
    /// Use a custom clock value, set using custom_clock_value.
    /// </summary>
    [pbr::OriginalName("CUSTOM")] Custom = 2,
    /// <summary>
    /// Use a custom clock value, but automatically increment it by one if the clock
    /// value from the current value is equal to the custom_clock_value.
    /// </summary>
    [pbr::OriginalName("CUSTOM_AUTO_INCREMENT")] CustomAutoIncrement = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Message for the Crdt handle stream in.
  /// </summary>
  public sealed partial class CrdtStreamIn : pb::IMessage<CrdtStreamIn> {
    private static readonly pb::MessageParser<CrdtStreamIn> _parser = new pb::MessageParser<CrdtStreamIn>(() => new CrdtStreamIn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtStreamIn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamIn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamIn(CrdtStreamIn other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Init:
          Init = other.Init.Clone();
          break;
        case MessageOneofCase.State:
          State = other.State.Clone();
          break;
        case MessageOneofCase.Changed:
          Changed = other.Changed.Clone();
          break;
        case MessageOneofCase.Deleted:
          Deleted = other.Deleted.Clone();
          break;
        case MessageOneofCase.Command:
          Command = other.Command.Clone();
          break;
        case MessageOneofCase.StreamCancelled:
          StreamCancelled = other.StreamCancelled.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamIn Clone() {
      return new CrdtStreamIn(this);
    }

    /// <summary>Field number for the "init" field.</summary>
    public const int InitFieldNumber = 1;
    /// <summary>
    /// Always sent first, and only once.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtInit Init {
      get { return messageCase_ == MessageOneofCase.Init ? (global::Cloudstate.Crdt.CrdtInit) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Init;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    /// <summary>
    /// Sent to indicate the user function should replace its current state with this state. If the user function
    /// does not have a current state, either because the init function didn't send one and the user function hasn't
    /// updated the state itself in response to a command, or because the state was deleted, this must be sent before
    /// any deltas.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtState State {
      get { return messageCase_ == MessageOneofCase.State ? (global::Cloudstate.Crdt.CrdtState) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.State;
      }
    }

    /// <summary>Field number for the "changed" field.</summary>
    public const int ChangedFieldNumber = 3;
    /// <summary>
    /// A delta to be applied to the current state. May be sent at any time as long as the user function already has
    /// state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtDelta Changed {
      get { return messageCase_ == MessageOneofCase.Changed ? (global::Cloudstate.Crdt.CrdtDelta) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Changed;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 4;
    /// <summary>
    /// Delete the entity. May be sent at any time. The user function should clear its state when it receives this.
    /// A proxy may decide to terminate the stream after sending this.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtDelete Deleted {
      get { return messageCase_ == MessageOneofCase.Deleted ? (global::Cloudstate.Crdt.CrdtDelete) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Deleted;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 5;
    /// <summary>
    /// A command, may be sent at any time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Command Command {
      get { return messageCase_ == MessageOneofCase.Command ? (global::Cloudstate.Command) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Command;
      }
    }

    /// <summary>Field number for the "stream_cancelled" field.</summary>
    public const int StreamCancelledFieldNumber = 6;
    /// <summary>
    /// A stream has been cancelled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.StreamCancelled StreamCancelled {
      get { return messageCase_ == MessageOneofCase.StreamCancelled ? (global::Cloudstate.StreamCancelled) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.StreamCancelled;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Init = 1,
      State = 2,
      Changed = 3,
      Deleted = 4,
      Command = 5,
      StreamCancelled = 6,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtStreamIn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtStreamIn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Init, other.Init)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(Changed, other.Changed)) return false;
      if (!object.Equals(Deleted, other.Deleted)) return false;
      if (!object.Equals(Command, other.Command)) return false;
      if (!object.Equals(StreamCancelled, other.StreamCancelled)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Init) hash ^= Init.GetHashCode();
      if (messageCase_ == MessageOneofCase.State) hash ^= State.GetHashCode();
      if (messageCase_ == MessageOneofCase.Changed) hash ^= Changed.GetHashCode();
      if (messageCase_ == MessageOneofCase.Deleted) hash ^= Deleted.GetHashCode();
      if (messageCase_ == MessageOneofCase.Command) hash ^= Command.GetHashCode();
      if (messageCase_ == MessageOneofCase.StreamCancelled) hash ^= StreamCancelled.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageCase_ == MessageOneofCase.Init) {
        output.WriteRawTag(10);
        output.WriteMessage(Init);
      }
      if (messageCase_ == MessageOneofCase.State) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (messageCase_ == MessageOneofCase.Changed) {
        output.WriteRawTag(26);
        output.WriteMessage(Changed);
      }
      if (messageCase_ == MessageOneofCase.Deleted) {
        output.WriteRawTag(34);
        output.WriteMessage(Deleted);
      }
      if (messageCase_ == MessageOneofCase.Command) {
        output.WriteRawTag(42);
        output.WriteMessage(Command);
      }
      if (messageCase_ == MessageOneofCase.StreamCancelled) {
        output.WriteRawTag(50);
        output.WriteMessage(StreamCancelled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Init) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Init);
      }
      if (messageCase_ == MessageOneofCase.State) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (messageCase_ == MessageOneofCase.Changed) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Changed);
      }
      if (messageCase_ == MessageOneofCase.Deleted) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deleted);
      }
      if (messageCase_ == MessageOneofCase.Command) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Command);
      }
      if (messageCase_ == MessageOneofCase.StreamCancelled) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamCancelled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtStreamIn other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Init:
          if (Init == null) {
            Init = new global::Cloudstate.Crdt.CrdtInit();
          }
          Init.MergeFrom(other.Init);
          break;
        case MessageOneofCase.State:
          if (State == null) {
            State = new global::Cloudstate.Crdt.CrdtState();
          }
          State.MergeFrom(other.State);
          break;
        case MessageOneofCase.Changed:
          if (Changed == null) {
            Changed = new global::Cloudstate.Crdt.CrdtDelta();
          }
          Changed.MergeFrom(other.Changed);
          break;
        case MessageOneofCase.Deleted:
          if (Deleted == null) {
            Deleted = new global::Cloudstate.Crdt.CrdtDelete();
          }
          Deleted.MergeFrom(other.Deleted);
          break;
        case MessageOneofCase.Command:
          if (Command == null) {
            Command = new global::Cloudstate.Command();
          }
          Command.MergeFrom(other.Command);
          break;
        case MessageOneofCase.StreamCancelled:
          if (StreamCancelled == null) {
            StreamCancelled = new global::Cloudstate.StreamCancelled();
          }
          StreamCancelled.MergeFrom(other.StreamCancelled);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Crdt.CrdtInit subBuilder = new global::Cloudstate.Crdt.CrdtInit();
            if (messageCase_ == MessageOneofCase.Init) {
              subBuilder.MergeFrom(Init);
            }
            input.ReadMessage(subBuilder);
            Init = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Crdt.CrdtState subBuilder = new global::Cloudstate.Crdt.CrdtState();
            if (messageCase_ == MessageOneofCase.State) {
              subBuilder.MergeFrom(State);
            }
            input.ReadMessage(subBuilder);
            State = subBuilder;
            break;
          }
          case 26: {
            global::Cloudstate.Crdt.CrdtDelta subBuilder = new global::Cloudstate.Crdt.CrdtDelta();
            if (messageCase_ == MessageOneofCase.Changed) {
              subBuilder.MergeFrom(Changed);
            }
            input.ReadMessage(subBuilder);
            Changed = subBuilder;
            break;
          }
          case 34: {
            global::Cloudstate.Crdt.CrdtDelete subBuilder = new global::Cloudstate.Crdt.CrdtDelete();
            if (messageCase_ == MessageOneofCase.Deleted) {
              subBuilder.MergeFrom(Deleted);
            }
            input.ReadMessage(subBuilder);
            Deleted = subBuilder;
            break;
          }
          case 42: {
            global::Cloudstate.Command subBuilder = new global::Cloudstate.Command();
            if (messageCase_ == MessageOneofCase.Command) {
              subBuilder.MergeFrom(Command);
            }
            input.ReadMessage(subBuilder);
            Command = subBuilder;
            break;
          }
          case 50: {
            global::Cloudstate.StreamCancelled subBuilder = new global::Cloudstate.StreamCancelled();
            if (messageCase_ == MessageOneofCase.StreamCancelled) {
              subBuilder.MergeFrom(StreamCancelled);
            }
            input.ReadMessage(subBuilder);
            StreamCancelled = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Message for the Crdt handle stream out.
  /// </summary>
  public sealed partial class CrdtStreamOut : pb::IMessage<CrdtStreamOut> {
    private static readonly pb::MessageParser<CrdtStreamOut> _parser = new pb::MessageParser<CrdtStreamOut>(() => new CrdtStreamOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtStreamOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamOut(CrdtStreamOut other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Reply:
          Reply = other.Reply.Clone();
          break;
        case MessageOneofCase.StreamedMessage:
          StreamedMessage = other.StreamedMessage.Clone();
          break;
        case MessageOneofCase.StreamCancelledResponse:
          StreamCancelledResponse = other.StreamCancelledResponse.Clone();
          break;
        case MessageOneofCase.Failure:
          Failure = other.Failure.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamOut Clone() {
      return new CrdtStreamOut(this);
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 1;
    /// <summary>
    /// A reply to an incoming command. Either one reply, or one failure, must be sent in response to each command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtReply Reply {
      get { return messageCase_ == MessageOneofCase.Reply ? (global::Cloudstate.Crdt.CrdtReply) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Reply;
      }
    }

    /// <summary>Field number for the "streamed_message" field.</summary>
    public const int StreamedMessageFieldNumber = 2;
    /// <summary>
    /// A streamed message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtStreamedMessage StreamedMessage {
      get { return messageCase_ == MessageOneofCase.StreamedMessage ? (global::Cloudstate.Crdt.CrdtStreamedMessage) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.StreamedMessage;
      }
    }

    /// <summary>Field number for the "stream_cancelled_response" field.</summary>
    public const int StreamCancelledResponseFieldNumber = 3;
    /// <summary>
    /// A stream cancelled response, may be sent in response to stream_cancelled.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtStreamCancelledResponse StreamCancelledResponse {
      get { return messageCase_ == MessageOneofCase.StreamCancelledResponse ? (global::Cloudstate.Crdt.CrdtStreamCancelledResponse) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.StreamCancelledResponse;
      }
    }

    /// <summary>Field number for the "failure" field.</summary>
    public const int FailureFieldNumber = 4;
    /// <summary>
    /// A failure. Either sent in response to a command, or sent if some other error occurs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Failure Failure {
      get { return messageCase_ == MessageOneofCase.Failure ? (global::Cloudstate.Failure) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Failure;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Reply = 1,
      StreamedMessage = 2,
      StreamCancelledResponse = 3,
      Failure = 4,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtStreamOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtStreamOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reply, other.Reply)) return false;
      if (!object.Equals(StreamedMessage, other.StreamedMessage)) return false;
      if (!object.Equals(StreamCancelledResponse, other.StreamCancelledResponse)) return false;
      if (!object.Equals(Failure, other.Failure)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Reply) hash ^= Reply.GetHashCode();
      if (messageCase_ == MessageOneofCase.StreamedMessage) hash ^= StreamedMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.StreamCancelledResponse) hash ^= StreamCancelledResponse.GetHashCode();
      if (messageCase_ == MessageOneofCase.Failure) hash ^= Failure.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageCase_ == MessageOneofCase.Reply) {
        output.WriteRawTag(10);
        output.WriteMessage(Reply);
      }
      if (messageCase_ == MessageOneofCase.StreamedMessage) {
        output.WriteRawTag(18);
        output.WriteMessage(StreamedMessage);
      }
      if (messageCase_ == MessageOneofCase.StreamCancelledResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(StreamCancelledResponse);
      }
      if (messageCase_ == MessageOneofCase.Failure) {
        output.WriteRawTag(34);
        output.WriteMessage(Failure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Reply) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reply);
      }
      if (messageCase_ == MessageOneofCase.StreamedMessage) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamedMessage);
      }
      if (messageCase_ == MessageOneofCase.StreamCancelledResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StreamCancelledResponse);
      }
      if (messageCase_ == MessageOneofCase.Failure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtStreamOut other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Reply:
          if (Reply == null) {
            Reply = new global::Cloudstate.Crdt.CrdtReply();
          }
          Reply.MergeFrom(other.Reply);
          break;
        case MessageOneofCase.StreamedMessage:
          if (StreamedMessage == null) {
            StreamedMessage = new global::Cloudstate.Crdt.CrdtStreamedMessage();
          }
          StreamedMessage.MergeFrom(other.StreamedMessage);
          break;
        case MessageOneofCase.StreamCancelledResponse:
          if (StreamCancelledResponse == null) {
            StreamCancelledResponse = new global::Cloudstate.Crdt.CrdtStreamCancelledResponse();
          }
          StreamCancelledResponse.MergeFrom(other.StreamCancelledResponse);
          break;
        case MessageOneofCase.Failure:
          if (Failure == null) {
            Failure = new global::Cloudstate.Failure();
          }
          Failure.MergeFrom(other.Failure);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Crdt.CrdtReply subBuilder = new global::Cloudstate.Crdt.CrdtReply();
            if (messageCase_ == MessageOneofCase.Reply) {
              subBuilder.MergeFrom(Reply);
            }
            input.ReadMessage(subBuilder);
            Reply = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Crdt.CrdtStreamedMessage subBuilder = new global::Cloudstate.Crdt.CrdtStreamedMessage();
            if (messageCase_ == MessageOneofCase.StreamedMessage) {
              subBuilder.MergeFrom(StreamedMessage);
            }
            input.ReadMessage(subBuilder);
            StreamedMessage = subBuilder;
            break;
          }
          case 26: {
            global::Cloudstate.Crdt.CrdtStreamCancelledResponse subBuilder = new global::Cloudstate.Crdt.CrdtStreamCancelledResponse();
            if (messageCase_ == MessageOneofCase.StreamCancelledResponse) {
              subBuilder.MergeFrom(StreamCancelledResponse);
            }
            input.ReadMessage(subBuilder);
            StreamCancelledResponse = subBuilder;
            break;
          }
          case 34: {
            global::Cloudstate.Failure subBuilder = new global::Cloudstate.Failure();
            if (messageCase_ == MessageOneofCase.Failure) {
              subBuilder.MergeFrom(Failure);
            }
            input.ReadMessage(subBuilder);
            Failure = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The CRDT state. This represents the full state of a CRDT. When received, a user function should replace the current
  /// state with this, not apply it as a delta. This includes both for the top level CRDT, and embedded CRDTs, such as
  /// the values of an ORMap.
  /// </summary>
  public sealed partial class CrdtState : pb::IMessage<CrdtState> {
    private static readonly pb::MessageParser<CrdtState> _parser = new pb::MessageParser<CrdtState>(() => new CrdtState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtState(CrdtState other) : this() {
      switch (other.StateCase) {
        case StateOneofCase.Gcounter:
          Gcounter = other.Gcounter.Clone();
          break;
        case StateOneofCase.Pncounter:
          Pncounter = other.Pncounter.Clone();
          break;
        case StateOneofCase.Gset:
          Gset = other.Gset.Clone();
          break;
        case StateOneofCase.Orset:
          Orset = other.Orset.Clone();
          break;
        case StateOneofCase.Lwwregister:
          Lwwregister = other.Lwwregister.Clone();
          break;
        case StateOneofCase.Flag:
          Flag = other.Flag.Clone();
          break;
        case StateOneofCase.Ormap:
          Ormap = other.Ormap.Clone();
          break;
        case StateOneofCase.Vote:
          Vote = other.Vote.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtState Clone() {
      return new CrdtState(this);
    }

    /// <summary>Field number for the "gcounter" field.</summary>
    public const int GcounterFieldNumber = 1;
    /// <summary>
    /// A Grow-only Counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.GCounterState Gcounter {
      get { return stateCase_ == StateOneofCase.Gcounter ? (global::Cloudstate.Crdt.GCounterState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Gcounter;
      }
    }

    /// <summary>Field number for the "pncounter" field.</summary>
    public const int PncounterFieldNumber = 2;
    /// <summary>
    /// A Positve-Negative Counter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.PNCounterState Pncounter {
      get { return stateCase_ == StateOneofCase.Pncounter ? (global::Cloudstate.Crdt.PNCounterState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Pncounter;
      }
    }

    /// <summary>Field number for the "gset" field.</summary>
    public const int GsetFieldNumber = 3;
    /// <summary>
    /// A Grow-only Set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.GSetState Gset {
      get { return stateCase_ == StateOneofCase.Gset ? (global::Cloudstate.Crdt.GSetState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Gset;
      }
    }

    /// <summary>Field number for the "orset" field.</summary>
    public const int OrsetFieldNumber = 4;
    /// <summary>
    /// An Observed-Removed Set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.ORSetState Orset {
      get { return stateCase_ == StateOneofCase.Orset ? (global::Cloudstate.Crdt.ORSetState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Orset;
      }
    }

    /// <summary>Field number for the "lwwregister" field.</summary>
    public const int LwwregisterFieldNumber = 5;
    /// <summary>
    /// A Last-Write-Wins Register
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.LWWRegisterState Lwwregister {
      get { return stateCase_ == StateOneofCase.Lwwregister ? (global::Cloudstate.Crdt.LWWRegisterState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Lwwregister;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 6;
    /// <summary>
    /// A Flag
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.FlagState Flag {
      get { return stateCase_ == StateOneofCase.Flag ? (global::Cloudstate.Crdt.FlagState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Flag;
      }
    }

    /// <summary>Field number for the "ormap" field.</summary>
    public const int OrmapFieldNumber = 7;
    /// <summary>
    /// An Observed-Removed Map
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.ORMapState Ormap {
      get { return stateCase_ == StateOneofCase.Ormap ? (global::Cloudstate.Crdt.ORMapState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Ormap;
      }
    }

    /// <summary>Field number for the "vote" field.</summary>
    public const int VoteFieldNumber = 8;
    /// <summary>
    /// A vote
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.VoteState Vote {
      get { return stateCase_ == StateOneofCase.Vote ? (global::Cloudstate.Crdt.VoteState) state_ : null; }
      set {
        state_ = value;
        stateCase_ = value == null ? StateOneofCase.None : StateOneofCase.Vote;
      }
    }

    private object state_;
    /// <summary>Enum of possible cases for the "state" oneof.</summary>
    public enum StateOneofCase {
      None = 0,
      Gcounter = 1,
      Pncounter = 2,
      Gset = 3,
      Orset = 4,
      Lwwregister = 5,
      Flag = 6,
      Ormap = 7,
      Vote = 8,
    }
    private StateOneofCase stateCase_ = StateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StateOneofCase StateCase {
      get { return stateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearState() {
      stateCase_ = StateOneofCase.None;
      state_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Gcounter, other.Gcounter)) return false;
      if (!object.Equals(Pncounter, other.Pncounter)) return false;
      if (!object.Equals(Gset, other.Gset)) return false;
      if (!object.Equals(Orset, other.Orset)) return false;
      if (!object.Equals(Lwwregister, other.Lwwregister)) return false;
      if (!object.Equals(Flag, other.Flag)) return false;
      if (!object.Equals(Ormap, other.Ormap)) return false;
      if (!object.Equals(Vote, other.Vote)) return false;
      if (StateCase != other.StateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (stateCase_ == StateOneofCase.Gcounter) hash ^= Gcounter.GetHashCode();
      if (stateCase_ == StateOneofCase.Pncounter) hash ^= Pncounter.GetHashCode();
      if (stateCase_ == StateOneofCase.Gset) hash ^= Gset.GetHashCode();
      if (stateCase_ == StateOneofCase.Orset) hash ^= Orset.GetHashCode();
      if (stateCase_ == StateOneofCase.Lwwregister) hash ^= Lwwregister.GetHashCode();
      if (stateCase_ == StateOneofCase.Flag) hash ^= Flag.GetHashCode();
      if (stateCase_ == StateOneofCase.Ormap) hash ^= Ormap.GetHashCode();
      if (stateCase_ == StateOneofCase.Vote) hash ^= Vote.GetHashCode();
      hash ^= (int) stateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (stateCase_ == StateOneofCase.Gcounter) {
        output.WriteRawTag(10);
        output.WriteMessage(Gcounter);
      }
      if (stateCase_ == StateOneofCase.Pncounter) {
        output.WriteRawTag(18);
        output.WriteMessage(Pncounter);
      }
      if (stateCase_ == StateOneofCase.Gset) {
        output.WriteRawTag(26);
        output.WriteMessage(Gset);
      }
      if (stateCase_ == StateOneofCase.Orset) {
        output.WriteRawTag(34);
        output.WriteMessage(Orset);
      }
      if (stateCase_ == StateOneofCase.Lwwregister) {
        output.WriteRawTag(42);
        output.WriteMessage(Lwwregister);
      }
      if (stateCase_ == StateOneofCase.Flag) {
        output.WriteRawTag(50);
        output.WriteMessage(Flag);
      }
      if (stateCase_ == StateOneofCase.Ormap) {
        output.WriteRawTag(58);
        output.WriteMessage(Ormap);
      }
      if (stateCase_ == StateOneofCase.Vote) {
        output.WriteRawTag(66);
        output.WriteMessage(Vote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (stateCase_ == StateOneofCase.Gcounter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcounter);
      }
      if (stateCase_ == StateOneofCase.Pncounter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pncounter);
      }
      if (stateCase_ == StateOneofCase.Gset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gset);
      }
      if (stateCase_ == StateOneofCase.Orset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orset);
      }
      if (stateCase_ == StateOneofCase.Lwwregister) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lwwregister);
      }
      if (stateCase_ == StateOneofCase.Flag) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flag);
      }
      if (stateCase_ == StateOneofCase.Ormap) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ormap);
      }
      if (stateCase_ == StateOneofCase.Vote) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vote);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtState other) {
      if (other == null) {
        return;
      }
      switch (other.StateCase) {
        case StateOneofCase.Gcounter:
          if (Gcounter == null) {
            Gcounter = new global::Cloudstate.Crdt.GCounterState();
          }
          Gcounter.MergeFrom(other.Gcounter);
          break;
        case StateOneofCase.Pncounter:
          if (Pncounter == null) {
            Pncounter = new global::Cloudstate.Crdt.PNCounterState();
          }
          Pncounter.MergeFrom(other.Pncounter);
          break;
        case StateOneofCase.Gset:
          if (Gset == null) {
            Gset = new global::Cloudstate.Crdt.GSetState();
          }
          Gset.MergeFrom(other.Gset);
          break;
        case StateOneofCase.Orset:
          if (Orset == null) {
            Orset = new global::Cloudstate.Crdt.ORSetState();
          }
          Orset.MergeFrom(other.Orset);
          break;
        case StateOneofCase.Lwwregister:
          if (Lwwregister == null) {
            Lwwregister = new global::Cloudstate.Crdt.LWWRegisterState();
          }
          Lwwregister.MergeFrom(other.Lwwregister);
          break;
        case StateOneofCase.Flag:
          if (Flag == null) {
            Flag = new global::Cloudstate.Crdt.FlagState();
          }
          Flag.MergeFrom(other.Flag);
          break;
        case StateOneofCase.Ormap:
          if (Ormap == null) {
            Ormap = new global::Cloudstate.Crdt.ORMapState();
          }
          Ormap.MergeFrom(other.Ormap);
          break;
        case StateOneofCase.Vote:
          if (Vote == null) {
            Vote = new global::Cloudstate.Crdt.VoteState();
          }
          Vote.MergeFrom(other.Vote);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Crdt.GCounterState subBuilder = new global::Cloudstate.Crdt.GCounterState();
            if (stateCase_ == StateOneofCase.Gcounter) {
              subBuilder.MergeFrom(Gcounter);
            }
            input.ReadMessage(subBuilder);
            Gcounter = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Crdt.PNCounterState subBuilder = new global::Cloudstate.Crdt.PNCounterState();
            if (stateCase_ == StateOneofCase.Pncounter) {
              subBuilder.MergeFrom(Pncounter);
            }
            input.ReadMessage(subBuilder);
            Pncounter = subBuilder;
            break;
          }
          case 26: {
            global::Cloudstate.Crdt.GSetState subBuilder = new global::Cloudstate.Crdt.GSetState();
            if (stateCase_ == StateOneofCase.Gset) {
              subBuilder.MergeFrom(Gset);
            }
            input.ReadMessage(subBuilder);
            Gset = subBuilder;
            break;
          }
          case 34: {
            global::Cloudstate.Crdt.ORSetState subBuilder = new global::Cloudstate.Crdt.ORSetState();
            if (stateCase_ == StateOneofCase.Orset) {
              subBuilder.MergeFrom(Orset);
            }
            input.ReadMessage(subBuilder);
            Orset = subBuilder;
            break;
          }
          case 42: {
            global::Cloudstate.Crdt.LWWRegisterState subBuilder = new global::Cloudstate.Crdt.LWWRegisterState();
            if (stateCase_ == StateOneofCase.Lwwregister) {
              subBuilder.MergeFrom(Lwwregister);
            }
            input.ReadMessage(subBuilder);
            Lwwregister = subBuilder;
            break;
          }
          case 50: {
            global::Cloudstate.Crdt.FlagState subBuilder = new global::Cloudstate.Crdt.FlagState();
            if (stateCase_ == StateOneofCase.Flag) {
              subBuilder.MergeFrom(Flag);
            }
            input.ReadMessage(subBuilder);
            Flag = subBuilder;
            break;
          }
          case 58: {
            global::Cloudstate.Crdt.ORMapState subBuilder = new global::Cloudstate.Crdt.ORMapState();
            if (stateCase_ == StateOneofCase.Ormap) {
              subBuilder.MergeFrom(Ormap);
            }
            input.ReadMessage(subBuilder);
            Ormap = subBuilder;
            break;
          }
          case 66: {
            global::Cloudstate.Crdt.VoteState subBuilder = new global::Cloudstate.Crdt.VoteState();
            if (stateCase_ == StateOneofCase.Vote) {
              subBuilder.MergeFrom(Vote);
            }
            input.ReadMessage(subBuilder);
            Vote = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Grow-only counter
  ///
  /// A G-Counter can only be incremented, it can't be decremented.
  /// </summary>
  public sealed partial class GCounterState : pb::IMessage<GCounterState> {
    private static readonly pb::MessageParser<GCounterState> _parser = new pb::MessageParser<GCounterState>(() => new GCounterState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GCounterState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCounterState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCounterState(GCounterState other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCounterState Clone() {
      return new GCounterState(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private ulong value_;
    /// <summary>
    /// The current value of the counter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GCounterState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GCounterState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0UL) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GCounterState other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0UL) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Positve-Negative Counter
  ///
  /// A PN-Counter can be both incremented and decremented.
  /// </summary>
  public sealed partial class PNCounterState : pb::IMessage<PNCounterState> {
    private static readonly pb::MessageParser<PNCounterState> _parser = new pb::MessageParser<PNCounterState>(() => new PNCounterState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PNCounterState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNCounterState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNCounterState(PNCounterState other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNCounterState Clone() {
      return new PNCounterState(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private long value_;
    /// <summary>
    /// The current value of the counter.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PNCounterState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PNCounterState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PNCounterState other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Grow-only Set
  ///
  /// A G-Set can only have items added, items cannot be removed.
  /// </summary>
  public sealed partial class GSetState : pb::IMessage<GSetState> {
    private static readonly pb::MessageParser<GSetState> _parser = new pb::MessageParser<GSetState>(() => new GSetState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GSetState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GSetState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GSetState(GSetState other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GSetState Clone() {
      return new GSetState(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> items_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// The current items in the set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GSetState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GSetState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GSetState other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An Observed-Removed Set
  ///
  /// An OR-Set may have items added and removed, with the condition that an item must be observed to be in the set before
  /// it is removed.
  /// </summary>
  public sealed partial class ORSetState : pb::IMessage<ORSetState> {
    private static readonly pb::MessageParser<ORSetState> _parser = new pb::MessageParser<ORSetState>(() => new ORSetState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ORSetState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORSetState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORSetState(ORSetState other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORSetState Clone() {
      return new ORSetState(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> items_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// The current items in the set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ORSetState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ORSetState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ORSetState other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Last-Write-Wins Register
  ///
  /// A LWW-Register holds a single value, with the current value being selected based on when it was last written.
  /// The time of the last write may either be determined using the proxies clock, or may be based on a custom, domain
  /// specific value.
  /// </summary>
  public sealed partial class LWWRegisterState : pb::IMessage<LWWRegisterState> {
    private static readonly pb::MessageParser<LWWRegisterState> _parser = new pb::MessageParser<LWWRegisterState>(() => new LWWRegisterState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LWWRegisterState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LWWRegisterState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LWWRegisterState(LWWRegisterState other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      clock_ = other.clock_;
      customClockValue_ = other.customClockValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LWWRegisterState Clone() {
      return new LWWRegisterState(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any value_;
    /// <summary>
    /// The current value of the register.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "clock" field.</summary>
    public const int ClockFieldNumber = 2;
    private global::Cloudstate.Crdt.CrdtClock clock_ = global::Cloudstate.Crdt.CrdtClock.Default;
    /// <summary>
    /// The clock to use if this state needs to be merged with another one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtClock Clock {
      get { return clock_; }
      set {
        clock_ = value;
      }
    }

    /// <summary>Field number for the "custom_clock_value" field.</summary>
    public const int CustomClockValueFieldNumber = 3;
    private long customClockValue_;
    /// <summary>
    /// The clock value if the clock in use is a custom clock.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CustomClockValue {
      get { return customClockValue_; }
      set {
        customClockValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LWWRegisterState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LWWRegisterState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (Clock != other.Clock) return false;
      if (CustomClockValue != other.CustomClockValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Clock != global::Cloudstate.Crdt.CrdtClock.Default) hash ^= Clock.GetHashCode();
      if (CustomClockValue != 0L) hash ^= CustomClockValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (Clock != global::Cloudstate.Crdt.CrdtClock.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Clock);
      }
      if (CustomClockValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CustomClockValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Clock != global::Cloudstate.Crdt.CrdtClock.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Clock);
      }
      if (CustomClockValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CustomClockValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LWWRegisterState other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Clock != global::Cloudstate.Crdt.CrdtClock.Default) {
        Clock = other.Clock;
      }
      if (other.CustomClockValue != 0L) {
        CustomClockValue = other.CustomClockValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Value);
            break;
          }
          case 16: {
            Clock = (global::Cloudstate.Crdt.CrdtClock) input.ReadEnum();
            break;
          }
          case 24: {
            CustomClockValue = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Flag
  ///
  /// A Flag is a boolean value, that once set to true, stays true.
  /// </summary>
  public sealed partial class FlagState : pb::IMessage<FlagState> {
    private static readonly pb::MessageParser<FlagState> _parser = new pb::MessageParser<FlagState>(() => new FlagState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlagState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagState(FlagState other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagState Clone() {
      return new FlagState(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    /// <summary>
    /// The current value of the flag.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlagState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlagState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlagState other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An Observed-Removed Map
  ///
  /// Like an OR-Set, an OR-Map may have items added and removed, with the condition that an item must be observed to be
  /// in the map before it is removed. The values of the map are CRDTs themselves. Different keys are allowed to use
  /// different CRDTs, and if an item is removed, and then replaced, the new value may be a different CRDT.
  /// </summary>
  public sealed partial class ORMapState : pb::IMessage<ORMapState> {
    private static readonly pb::MessageParser<ORMapState> _parser = new pb::MessageParser<ORMapState>(() => new ORMapState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ORMapState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapState(ORMapState other) : this() {
      entries_ = other.entries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapState Clone() {
      return new ORMapState(this);
    }

    /// <summary>Field number for the "entries" field.</summary>
    public const int EntriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cloudstate.Crdt.ORMapEntry> _repeated_entries_codec
        = pb::FieldCodec.ForMessage(10, global::Cloudstate.Crdt.ORMapEntry.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntry> entries_ = new pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntry>();
    /// <summary>
    /// The entries of the map.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntry> Entries {
      get { return entries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ORMapState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ORMapState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!entries_.Equals(other.entries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= entries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      entries_.WriteTo(output, _repeated_entries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += entries_.CalculateSize(_repeated_entries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ORMapState other) {
      if (other == null) {
        return;
      }
      entries_.Add(other.entries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            entries_.AddEntriesFrom(input, _repeated_entries_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An OR-Map entry.
  /// </summary>
  public sealed partial class ORMapEntry : pb::IMessage<ORMapEntry> {
    private static readonly pb::MessageParser<ORMapEntry> _parser = new pb::MessageParser<ORMapEntry>(() => new ORMapEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ORMapEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapEntry(ORMapEntry other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapEntry Clone() {
      return new ORMapEntry(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any key_;
    /// <summary>
    /// The entry key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Cloudstate.Crdt.CrdtState value_;
    /// <summary>
    /// The value of the entry, a CRDT itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtState Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ORMapEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ORMapEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ORMapEntry other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Cloudstate.Crdt.CrdtState();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Cloudstate.Crdt.CrdtState();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Vote. This allows nodes to vote on something.
  /// </summary>
  public sealed partial class VoteState : pb::IMessage<VoteState> {
    private static readonly pb::MessageParser<VoteState> _parser = new pb::MessageParser<VoteState>(() => new VoteState());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteState> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteState() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteState(VoteState other) : this() {
      votesFor_ = other.votesFor_;
      totalVoters_ = other.totalVoters_;
      selfVote_ = other.selfVote_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteState Clone() {
      return new VoteState(this);
    }

    /// <summary>Field number for the "votes_for" field.</summary>
    public const int VotesForFieldNumber = 1;
    private uint votesFor_;
    /// <summary>
    /// The number of votes for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint VotesFor {
      get { return votesFor_; }
      set {
        votesFor_ = value;
      }
    }

    /// <summary>Field number for the "total_voters" field.</summary>
    public const int TotalVotersFieldNumber = 2;
    private uint totalVoters_;
    /// <summary>
    /// The total number of voters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TotalVoters {
      get { return totalVoters_; }
      set {
        totalVoters_ = value;
      }
    }

    /// <summary>Field number for the "self_vote" field.</summary>
    public const int SelfVoteFieldNumber = 3;
    private bool selfVote_;
    /// <summary>
    /// The vote of the current node, which is included in the above two numbers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfVote {
      get { return selfVote_; }
      set {
        selfVote_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteState);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteState other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VotesFor != other.VotesFor) return false;
      if (TotalVoters != other.TotalVoters) return false;
      if (SelfVote != other.SelfVote) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VotesFor != 0) hash ^= VotesFor.GetHashCode();
      if (TotalVoters != 0) hash ^= TotalVoters.GetHashCode();
      if (SelfVote != false) hash ^= SelfVote.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VotesFor != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(VotesFor);
      }
      if (TotalVoters != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TotalVoters);
      }
      if (SelfVote != false) {
        output.WriteRawTag(24);
        output.WriteBool(SelfVote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VotesFor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(VotesFor);
      }
      if (TotalVoters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TotalVoters);
      }
      if (SelfVote != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteState other) {
      if (other == null) {
        return;
      }
      if (other.VotesFor != 0) {
        VotesFor = other.VotesFor;
      }
      if (other.TotalVoters != 0) {
        TotalVoters = other.TotalVoters;
      }
      if (other.SelfVote != false) {
        SelfVote = other.SelfVote;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            VotesFor = input.ReadUInt32();
            break;
          }
          case 16: {
            TotalVoters = input.ReadUInt32();
            break;
          }
          case 24: {
            SelfVote = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A CRDT delta
  ///
  /// Deltas only carry the change in value, not the full value (unless
  /// </summary>
  public sealed partial class CrdtDelta : pb::IMessage<CrdtDelta> {
    private static readonly pb::MessageParser<CrdtDelta> _parser = new pb::MessageParser<CrdtDelta>(() => new CrdtDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtDelta(CrdtDelta other) : this() {
      switch (other.DeltaCase) {
        case DeltaOneofCase.Gcounter:
          Gcounter = other.Gcounter.Clone();
          break;
        case DeltaOneofCase.Pncounter:
          Pncounter = other.Pncounter.Clone();
          break;
        case DeltaOneofCase.Gset:
          Gset = other.Gset.Clone();
          break;
        case DeltaOneofCase.Orset:
          Orset = other.Orset.Clone();
          break;
        case DeltaOneofCase.Lwwregister:
          Lwwregister = other.Lwwregister.Clone();
          break;
        case DeltaOneofCase.Flag:
          Flag = other.Flag.Clone();
          break;
        case DeltaOneofCase.Ormap:
          Ormap = other.Ormap.Clone();
          break;
        case DeltaOneofCase.Vote:
          Vote = other.Vote.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtDelta Clone() {
      return new CrdtDelta(this);
    }

    /// <summary>Field number for the "gcounter" field.</summary>
    public const int GcounterFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.GCounterDelta Gcounter {
      get { return deltaCase_ == DeltaOneofCase.Gcounter ? (global::Cloudstate.Crdt.GCounterDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Gcounter;
      }
    }

    /// <summary>Field number for the "pncounter" field.</summary>
    public const int PncounterFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.PNCounterDelta Pncounter {
      get { return deltaCase_ == DeltaOneofCase.Pncounter ? (global::Cloudstate.Crdt.PNCounterDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Pncounter;
      }
    }

    /// <summary>Field number for the "gset" field.</summary>
    public const int GsetFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.GSetDelta Gset {
      get { return deltaCase_ == DeltaOneofCase.Gset ? (global::Cloudstate.Crdt.GSetDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Gset;
      }
    }

    /// <summary>Field number for the "orset" field.</summary>
    public const int OrsetFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.ORSetDelta Orset {
      get { return deltaCase_ == DeltaOneofCase.Orset ? (global::Cloudstate.Crdt.ORSetDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Orset;
      }
    }

    /// <summary>Field number for the "lwwregister" field.</summary>
    public const int LwwregisterFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.LWWRegisterDelta Lwwregister {
      get { return deltaCase_ == DeltaOneofCase.Lwwregister ? (global::Cloudstate.Crdt.LWWRegisterDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Lwwregister;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.FlagDelta Flag {
      get { return deltaCase_ == DeltaOneofCase.Flag ? (global::Cloudstate.Crdt.FlagDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Flag;
      }
    }

    /// <summary>Field number for the "ormap" field.</summary>
    public const int OrmapFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.ORMapDelta Ormap {
      get { return deltaCase_ == DeltaOneofCase.Ormap ? (global::Cloudstate.Crdt.ORMapDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Ormap;
      }
    }

    /// <summary>Field number for the "vote" field.</summary>
    public const int VoteFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.VoteDelta Vote {
      get { return deltaCase_ == DeltaOneofCase.Vote ? (global::Cloudstate.Crdt.VoteDelta) delta_ : null; }
      set {
        delta_ = value;
        deltaCase_ = value == null ? DeltaOneofCase.None : DeltaOneofCase.Vote;
      }
    }

    private object delta_;
    /// <summary>Enum of possible cases for the "delta" oneof.</summary>
    public enum DeltaOneofCase {
      None = 0,
      Gcounter = 1,
      Pncounter = 2,
      Gset = 3,
      Orset = 4,
      Lwwregister = 5,
      Flag = 6,
      Ormap = 7,
      Vote = 8,
    }
    private DeltaOneofCase deltaCase_ = DeltaOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeltaOneofCase DeltaCase {
      get { return deltaCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDelta() {
      deltaCase_ = DeltaOneofCase.None;
      delta_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Gcounter, other.Gcounter)) return false;
      if (!object.Equals(Pncounter, other.Pncounter)) return false;
      if (!object.Equals(Gset, other.Gset)) return false;
      if (!object.Equals(Orset, other.Orset)) return false;
      if (!object.Equals(Lwwregister, other.Lwwregister)) return false;
      if (!object.Equals(Flag, other.Flag)) return false;
      if (!object.Equals(Ormap, other.Ormap)) return false;
      if (!object.Equals(Vote, other.Vote)) return false;
      if (DeltaCase != other.DeltaCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deltaCase_ == DeltaOneofCase.Gcounter) hash ^= Gcounter.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Pncounter) hash ^= Pncounter.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Gset) hash ^= Gset.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Orset) hash ^= Orset.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Lwwregister) hash ^= Lwwregister.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Flag) hash ^= Flag.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Ormap) hash ^= Ormap.GetHashCode();
      if (deltaCase_ == DeltaOneofCase.Vote) hash ^= Vote.GetHashCode();
      hash ^= (int) deltaCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (deltaCase_ == DeltaOneofCase.Gcounter) {
        output.WriteRawTag(10);
        output.WriteMessage(Gcounter);
      }
      if (deltaCase_ == DeltaOneofCase.Pncounter) {
        output.WriteRawTag(18);
        output.WriteMessage(Pncounter);
      }
      if (deltaCase_ == DeltaOneofCase.Gset) {
        output.WriteRawTag(26);
        output.WriteMessage(Gset);
      }
      if (deltaCase_ == DeltaOneofCase.Orset) {
        output.WriteRawTag(34);
        output.WriteMessage(Orset);
      }
      if (deltaCase_ == DeltaOneofCase.Lwwregister) {
        output.WriteRawTag(42);
        output.WriteMessage(Lwwregister);
      }
      if (deltaCase_ == DeltaOneofCase.Flag) {
        output.WriteRawTag(50);
        output.WriteMessage(Flag);
      }
      if (deltaCase_ == DeltaOneofCase.Ormap) {
        output.WriteRawTag(58);
        output.WriteMessage(Ormap);
      }
      if (deltaCase_ == DeltaOneofCase.Vote) {
        output.WriteRawTag(66);
        output.WriteMessage(Vote);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deltaCase_ == DeltaOneofCase.Gcounter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gcounter);
      }
      if (deltaCase_ == DeltaOneofCase.Pncounter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pncounter);
      }
      if (deltaCase_ == DeltaOneofCase.Gset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gset);
      }
      if (deltaCase_ == DeltaOneofCase.Orset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orset);
      }
      if (deltaCase_ == DeltaOneofCase.Lwwregister) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Lwwregister);
      }
      if (deltaCase_ == DeltaOneofCase.Flag) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Flag);
      }
      if (deltaCase_ == DeltaOneofCase.Ormap) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ormap);
      }
      if (deltaCase_ == DeltaOneofCase.Vote) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vote);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtDelta other) {
      if (other == null) {
        return;
      }
      switch (other.DeltaCase) {
        case DeltaOneofCase.Gcounter:
          if (Gcounter == null) {
            Gcounter = new global::Cloudstate.Crdt.GCounterDelta();
          }
          Gcounter.MergeFrom(other.Gcounter);
          break;
        case DeltaOneofCase.Pncounter:
          if (Pncounter == null) {
            Pncounter = new global::Cloudstate.Crdt.PNCounterDelta();
          }
          Pncounter.MergeFrom(other.Pncounter);
          break;
        case DeltaOneofCase.Gset:
          if (Gset == null) {
            Gset = new global::Cloudstate.Crdt.GSetDelta();
          }
          Gset.MergeFrom(other.Gset);
          break;
        case DeltaOneofCase.Orset:
          if (Orset == null) {
            Orset = new global::Cloudstate.Crdt.ORSetDelta();
          }
          Orset.MergeFrom(other.Orset);
          break;
        case DeltaOneofCase.Lwwregister:
          if (Lwwregister == null) {
            Lwwregister = new global::Cloudstate.Crdt.LWWRegisterDelta();
          }
          Lwwregister.MergeFrom(other.Lwwregister);
          break;
        case DeltaOneofCase.Flag:
          if (Flag == null) {
            Flag = new global::Cloudstate.Crdt.FlagDelta();
          }
          Flag.MergeFrom(other.Flag);
          break;
        case DeltaOneofCase.Ormap:
          if (Ormap == null) {
            Ormap = new global::Cloudstate.Crdt.ORMapDelta();
          }
          Ormap.MergeFrom(other.Ormap);
          break;
        case DeltaOneofCase.Vote:
          if (Vote == null) {
            Vote = new global::Cloudstate.Crdt.VoteDelta();
          }
          Vote.MergeFrom(other.Vote);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Crdt.GCounterDelta subBuilder = new global::Cloudstate.Crdt.GCounterDelta();
            if (deltaCase_ == DeltaOneofCase.Gcounter) {
              subBuilder.MergeFrom(Gcounter);
            }
            input.ReadMessage(subBuilder);
            Gcounter = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Crdt.PNCounterDelta subBuilder = new global::Cloudstate.Crdt.PNCounterDelta();
            if (deltaCase_ == DeltaOneofCase.Pncounter) {
              subBuilder.MergeFrom(Pncounter);
            }
            input.ReadMessage(subBuilder);
            Pncounter = subBuilder;
            break;
          }
          case 26: {
            global::Cloudstate.Crdt.GSetDelta subBuilder = new global::Cloudstate.Crdt.GSetDelta();
            if (deltaCase_ == DeltaOneofCase.Gset) {
              subBuilder.MergeFrom(Gset);
            }
            input.ReadMessage(subBuilder);
            Gset = subBuilder;
            break;
          }
          case 34: {
            global::Cloudstate.Crdt.ORSetDelta subBuilder = new global::Cloudstate.Crdt.ORSetDelta();
            if (deltaCase_ == DeltaOneofCase.Orset) {
              subBuilder.MergeFrom(Orset);
            }
            input.ReadMessage(subBuilder);
            Orset = subBuilder;
            break;
          }
          case 42: {
            global::Cloudstate.Crdt.LWWRegisterDelta subBuilder = new global::Cloudstate.Crdt.LWWRegisterDelta();
            if (deltaCase_ == DeltaOneofCase.Lwwregister) {
              subBuilder.MergeFrom(Lwwregister);
            }
            input.ReadMessage(subBuilder);
            Lwwregister = subBuilder;
            break;
          }
          case 50: {
            global::Cloudstate.Crdt.FlagDelta subBuilder = new global::Cloudstate.Crdt.FlagDelta();
            if (deltaCase_ == DeltaOneofCase.Flag) {
              subBuilder.MergeFrom(Flag);
            }
            input.ReadMessage(subBuilder);
            Flag = subBuilder;
            break;
          }
          case 58: {
            global::Cloudstate.Crdt.ORMapDelta subBuilder = new global::Cloudstate.Crdt.ORMapDelta();
            if (deltaCase_ == DeltaOneofCase.Ormap) {
              subBuilder.MergeFrom(Ormap);
            }
            input.ReadMessage(subBuilder);
            Ormap = subBuilder;
            break;
          }
          case 66: {
            global::Cloudstate.Crdt.VoteDelta subBuilder = new global::Cloudstate.Crdt.VoteDelta();
            if (deltaCase_ == DeltaOneofCase.Vote) {
              subBuilder.MergeFrom(Vote);
            }
            input.ReadMessage(subBuilder);
            Vote = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class GCounterDelta : pb::IMessage<GCounterDelta> {
    private static readonly pb::MessageParser<GCounterDelta> _parser = new pb::MessageParser<GCounterDelta>(() => new GCounterDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GCounterDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCounterDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCounterDelta(GCounterDelta other) : this() {
      increment_ = other.increment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GCounterDelta Clone() {
      return new GCounterDelta(this);
    }

    /// <summary>Field number for the "increment" field.</summary>
    public const int IncrementFieldNumber = 1;
    private ulong increment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Increment {
      get { return increment_; }
      set {
        increment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GCounterDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GCounterDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Increment != other.Increment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Increment != 0UL) hash ^= Increment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Increment != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Increment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Increment != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Increment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GCounterDelta other) {
      if (other == null) {
        return;
      }
      if (other.Increment != 0UL) {
        Increment = other.Increment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Increment = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PNCounterDelta : pb::IMessage<PNCounterDelta> {
    private static readonly pb::MessageParser<PNCounterDelta> _parser = new pb::MessageParser<PNCounterDelta>(() => new PNCounterDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PNCounterDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNCounterDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNCounterDelta(PNCounterDelta other) : this() {
      change_ = other.change_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNCounterDelta Clone() {
      return new PNCounterDelta(this);
    }

    /// <summary>Field number for the "change" field.</summary>
    public const int ChangeFieldNumber = 1;
    private long change_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Change {
      get { return change_; }
      set {
        change_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PNCounterDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PNCounterDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Change != other.Change) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Change != 0L) hash ^= Change.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Change != 0L) {
        output.WriteRawTag(8);
        output.WriteSInt64(Change);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Change != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Change);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PNCounterDelta other) {
      if (other == null) {
        return;
      }
      if (other.Change != 0L) {
        Change = other.Change;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Change = input.ReadSInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GSetDelta : pb::IMessage<GSetDelta> {
    private static readonly pb::MessageParser<GSetDelta> _parser = new pb::MessageParser<GSetDelta>(() => new GSetDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GSetDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GSetDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GSetDelta(GSetDelta other) : this() {
      added_ = other.added_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GSetDelta Clone() {
      return new GSetDelta(this);
    }

    /// <summary>Field number for the "added" field.</summary>
    public const int AddedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_added_codec
        = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> added_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Added {
      get { return added_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GSetDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GSetDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!added_.Equals(other.added_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= added_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      added_.WriteTo(output, _repeated_added_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += added_.CalculateSize(_repeated_added_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GSetDelta other) {
      if (other == null) {
        return;
      }
      added_.Add(other.added_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            added_.AddEntriesFrom(input, _repeated_added_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ORSetDelta : pb::IMessage<ORSetDelta> {
    private static readonly pb::MessageParser<ORSetDelta> _parser = new pb::MessageParser<ORSetDelta>(() => new ORSetDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ORSetDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORSetDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORSetDelta(ORSetDelta other) : this() {
      cleared_ = other.cleared_;
      removed_ = other.removed_.Clone();
      added_ = other.added_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORSetDelta Clone() {
      return new ORSetDelta(this);
    }

    /// <summary>Field number for the "cleared" field.</summary>
    public const int ClearedFieldNumber = 1;
    private bool cleared_;
    /// <summary>
    /// If cleared is set, the set must be cleared before added is processed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cleared {
      get { return cleared_; }
      set {
        cleared_ = value;
      }
    }

    /// <summary>Field number for the "removed" field.</summary>
    public const int RemovedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_removed_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> removed_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Removed {
      get { return removed_; }
    }

    /// <summary>Field number for the "added" field.</summary>
    public const int AddedFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_added_codec
        = pb::FieldCodec.ForMessage(26, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> added_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Added {
      get { return added_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ORSetDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ORSetDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cleared != other.Cleared) return false;
      if(!removed_.Equals(other.removed_)) return false;
      if(!added_.Equals(other.added_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cleared != false) hash ^= Cleared.GetHashCode();
      hash ^= removed_.GetHashCode();
      hash ^= added_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cleared != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cleared);
      }
      removed_.WriteTo(output, _repeated_removed_codec);
      added_.WriteTo(output, _repeated_added_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cleared != false) {
        size += 1 + 1;
      }
      size += removed_.CalculateSize(_repeated_removed_codec);
      size += added_.CalculateSize(_repeated_added_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ORSetDelta other) {
      if (other == null) {
        return;
      }
      if (other.Cleared != false) {
        Cleared = other.Cleared;
      }
      removed_.Add(other.removed_);
      added_.Add(other.added_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cleared = input.ReadBool();
            break;
          }
          case 18: {
            removed_.AddEntriesFrom(input, _repeated_removed_codec);
            break;
          }
          case 26: {
            added_.AddEntriesFrom(input, _repeated_added_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LWWRegisterDelta : pb::IMessage<LWWRegisterDelta> {
    private static readonly pb::MessageParser<LWWRegisterDelta> _parser = new pb::MessageParser<LWWRegisterDelta>(() => new LWWRegisterDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LWWRegisterDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LWWRegisterDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LWWRegisterDelta(LWWRegisterDelta other) : this() {
      value_ = other.value_ != null ? other.value_.Clone() : null;
      clock_ = other.clock_;
      customClockValue_ = other.customClockValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LWWRegisterDelta Clone() {
      return new LWWRegisterDelta(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "clock" field.</summary>
    public const int ClockFieldNumber = 2;
    private global::Cloudstate.Crdt.CrdtClock clock_ = global::Cloudstate.Crdt.CrdtClock.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtClock Clock {
      get { return clock_; }
      set {
        clock_ = value;
      }
    }

    /// <summary>Field number for the "custom_clock_value" field.</summary>
    public const int CustomClockValueFieldNumber = 3;
    private long customClockValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CustomClockValue {
      get { return customClockValue_; }
      set {
        customClockValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LWWRegisterDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LWWRegisterDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Value, other.Value)) return false;
      if (Clock != other.Clock) return false;
      if (CustomClockValue != other.CustomClockValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (value_ != null) hash ^= Value.GetHashCode();
      if (Clock != global::Cloudstate.Crdt.CrdtClock.Default) hash ^= Clock.GetHashCode();
      if (CustomClockValue != 0L) hash ^= CustomClockValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (value_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Value);
      }
      if (Clock != global::Cloudstate.Crdt.CrdtClock.Default) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Clock);
      }
      if (CustomClockValue != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CustomClockValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (Clock != global::Cloudstate.Crdt.CrdtClock.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Clock);
      }
      if (CustomClockValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CustomClockValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LWWRegisterDelta other) {
      if (other == null) {
        return;
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Value.MergeFrom(other.Value);
      }
      if (other.Clock != global::Cloudstate.Crdt.CrdtClock.Default) {
        Clock = other.Clock;
      }
      if (other.CustomClockValue != 0L) {
        CustomClockValue = other.CustomClockValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (value_ == null) {
              Value = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Value);
            break;
          }
          case 16: {
            Clock = (global::Cloudstate.Crdt.CrdtClock) input.ReadEnum();
            break;
          }
          case 24: {
            CustomClockValue = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FlagDelta : pb::IMessage<FlagDelta> {
    private static readonly pb::MessageParser<FlagDelta> _parser = new pb::MessageParser<FlagDelta>(() => new FlagDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FlagDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagDelta(FlagDelta other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FlagDelta Clone() {
      return new FlagDelta(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private bool value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FlagDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FlagDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != false) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != false) {
        output.WriteRawTag(8);
        output.WriteBool(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FlagDelta other) {
      if (other == null) {
        return;
      }
      if (other.Value != false) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ORMapDelta : pb::IMessage<ORMapDelta> {
    private static readonly pb::MessageParser<ORMapDelta> _parser = new pb::MessageParser<ORMapDelta>(() => new ORMapDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ORMapDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapDelta(ORMapDelta other) : this() {
      cleared_ = other.cleared_;
      removed_ = other.removed_.Clone();
      updated_ = other.updated_.Clone();
      added_ = other.added_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapDelta Clone() {
      return new ORMapDelta(this);
    }

    /// <summary>Field number for the "cleared" field.</summary>
    public const int ClearedFieldNumber = 1;
    private bool cleared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cleared {
      get { return cleared_; }
      set {
        cleared_ = value;
      }
    }

    /// <summary>Field number for the "removed" field.</summary>
    public const int RemovedFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_removed_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> removed_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Removed {
      get { return removed_; }
    }

    /// <summary>Field number for the "updated" field.</summary>
    public const int UpdatedFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cloudstate.Crdt.ORMapEntryDelta> _repeated_updated_codec
        = pb::FieldCodec.ForMessage(26, global::Cloudstate.Crdt.ORMapEntryDelta.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntryDelta> updated_ = new pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntryDelta>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntryDelta> Updated {
      get { return updated_; }
    }

    /// <summary>Field number for the "added" field.</summary>
    public const int AddedFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Cloudstate.Crdt.ORMapEntry> _repeated_added_codec
        = pb::FieldCodec.ForMessage(34, global::Cloudstate.Crdt.ORMapEntry.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntry> added_ = new pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.Crdt.ORMapEntry> Added {
      get { return added_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ORMapDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ORMapDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Cleared != other.Cleared) return false;
      if(!removed_.Equals(other.removed_)) return false;
      if(!updated_.Equals(other.updated_)) return false;
      if(!added_.Equals(other.added_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Cleared != false) hash ^= Cleared.GetHashCode();
      hash ^= removed_.GetHashCode();
      hash ^= updated_.GetHashCode();
      hash ^= added_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Cleared != false) {
        output.WriteRawTag(8);
        output.WriteBool(Cleared);
      }
      removed_.WriteTo(output, _repeated_removed_codec);
      updated_.WriteTo(output, _repeated_updated_codec);
      added_.WriteTo(output, _repeated_added_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Cleared != false) {
        size += 1 + 1;
      }
      size += removed_.CalculateSize(_repeated_removed_codec);
      size += updated_.CalculateSize(_repeated_updated_codec);
      size += added_.CalculateSize(_repeated_added_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ORMapDelta other) {
      if (other == null) {
        return;
      }
      if (other.Cleared != false) {
        Cleared = other.Cleared;
      }
      removed_.Add(other.removed_);
      updated_.Add(other.updated_);
      added_.Add(other.added_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Cleared = input.ReadBool();
            break;
          }
          case 18: {
            removed_.AddEntriesFrom(input, _repeated_removed_codec);
            break;
          }
          case 26: {
            updated_.AddEntriesFrom(input, _repeated_updated_codec);
            break;
          }
          case 34: {
            added_.AddEntriesFrom(input, _repeated_added_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ORMapEntryDelta : pb::IMessage<ORMapEntryDelta> {
    private static readonly pb::MessageParser<ORMapEntryDelta> _parser = new pb::MessageParser<ORMapEntryDelta>(() => new ORMapEntryDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ORMapEntryDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapEntryDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapEntryDelta(ORMapEntryDelta other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      delta_ = other.delta_ != null ? other.delta_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ORMapEntryDelta Clone() {
      return new ORMapEntryDelta(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Any key_;
    /// <summary>
    /// The entry key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "delta" field.</summary>
    public const int DeltaFieldNumber = 2;
    private global::Cloudstate.Crdt.CrdtDelta delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtDelta Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ORMapEntryDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ORMapEntryDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Delta, other.Delta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (delta_ != null) hash ^= Delta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (delta_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Delta);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (delta_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delta);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ORMapEntryDelta other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.delta_ != null) {
        if (delta_ == null) {
          Delta = new global::Cloudstate.Crdt.CrdtDelta();
        }
        Delta.MergeFrom(other.Delta);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (delta_ == null) {
              Delta = new global::Cloudstate.Crdt.CrdtDelta();
            }
            input.ReadMessage(Delta);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VoteDelta : pb::IMessage<VoteDelta> {
    private static readonly pb::MessageParser<VoteDelta> _parser = new pb::MessageParser<VoteDelta>(() => new VoteDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoteDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteDelta(VoteDelta other) : this() {
      selfVote_ = other.selfVote_;
      votesFor_ = other.votesFor_;
      totalVoters_ = other.totalVoters_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoteDelta Clone() {
      return new VoteDelta(this);
    }

    /// <summary>Field number for the "self_vote" field.</summary>
    public const int SelfVoteFieldNumber = 1;
    private bool selfVote_;
    /// <summary>
    /// Only set by the user function to change the nodes current vote.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SelfVote {
      get { return selfVote_; }
      set {
        selfVote_ = value;
      }
    }

    /// <summary>Field number for the "votes_for" field.</summary>
    public const int VotesForFieldNumber = 2;
    private int votesFor_;
    /// <summary>
    /// Only set by the proxy to change the votes for and total voters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int VotesFor {
      get { return votesFor_; }
      set {
        votesFor_ = value;
      }
    }

    /// <summary>Field number for the "total_voters" field.</summary>
    public const int TotalVotersFieldNumber = 3;
    private int totalVoters_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalVoters {
      get { return totalVoters_; }
      set {
        totalVoters_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoteDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoteDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SelfVote != other.SelfVote) return false;
      if (VotesFor != other.VotesFor) return false;
      if (TotalVoters != other.TotalVoters) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SelfVote != false) hash ^= SelfVote.GetHashCode();
      if (VotesFor != 0) hash ^= VotesFor.GetHashCode();
      if (TotalVoters != 0) hash ^= TotalVoters.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SelfVote != false) {
        output.WriteRawTag(8);
        output.WriteBool(SelfVote);
      }
      if (VotesFor != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(VotesFor);
      }
      if (TotalVoters != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(TotalVoters);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SelfVote != false) {
        size += 1 + 1;
      }
      if (VotesFor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(VotesFor);
      }
      if (TotalVoters != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalVoters);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoteDelta other) {
      if (other == null) {
        return;
      }
      if (other.SelfVote != false) {
        SelfVote = other.SelfVote;
      }
      if (other.VotesFor != 0) {
        VotesFor = other.VotesFor;
      }
      if (other.TotalVoters != 0) {
        TotalVoters = other.TotalVoters;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SelfVote = input.ReadBool();
            break;
          }
          case 16: {
            VotesFor = input.ReadInt32();
            break;
          }
          case 24: {
            TotalVoters = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrdtInit : pb::IMessage<CrdtInit> {
    private static readonly pb::MessageParser<CrdtInit> _parser = new pb::MessageParser<CrdtInit>(() => new CrdtInit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtInit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtInit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtInit(CrdtInit other) : this() {
      serviceName_ = other.serviceName_;
      entityId_ = other.entityId_;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtInit Clone() {
      return new CrdtInit(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private string entityId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 3;
    private global::Cloudstate.Crdt.CrdtState state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtState State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtInit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtInit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
      if (state_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtInit other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::Cloudstate.Crdt.CrdtState();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
          case 26: {
            if (state_ == null) {
              State = new global::Cloudstate.Crdt.CrdtState();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrdtDelete : pb::IMessage<CrdtDelete> {
    private static readonly pb::MessageParser<CrdtDelete> _parser = new pb::MessageParser<CrdtDelete>(() => new CrdtDelete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtDelete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtDelete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtDelete(CrdtDelete other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtDelete Clone() {
      return new CrdtDelete(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtDelete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtDelete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtDelete other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CrdtReply : pb::IMessage<CrdtReply> {
    private static readonly pb::MessageParser<CrdtReply> _parser = new pb::MessageParser<CrdtReply>(() => new CrdtReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtReply(CrdtReply other) : this() {
      commandId_ = other.commandId_;
      clientAction_ = other.clientAction_ != null ? other.clientAction_.Clone() : null;
      sideEffects_ = other.sideEffects_.Clone();
      stateAction_ = other.stateAction_ != null ? other.stateAction_.Clone() : null;
      streamed_ = other.streamed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtReply Clone() {
      return new CrdtReply(this);
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private long commandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "client_action" field.</summary>
    public const int ClientActionFieldNumber = 2;
    private global::Cloudstate.ClientAction clientAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.ClientAction ClientAction {
      get { return clientAction_; }
      set {
        clientAction_ = value;
      }
    }

    /// <summary>Field number for the "side_effects" field.</summary>
    public const int SideEffectsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Cloudstate.SideEffect> _repeated_sideEffects_codec
        = pb::FieldCodec.ForMessage(34, global::Cloudstate.SideEffect.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.SideEffect> sideEffects_ = new pbc::RepeatedField<global::Cloudstate.SideEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.SideEffect> SideEffects {
      get { return sideEffects_; }
    }

    /// <summary>Field number for the "state_action" field.</summary>
    public const int StateActionFieldNumber = 5;
    private global::Cloudstate.Crdt.CrdtStateAction stateAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtStateAction StateAction {
      get { return stateAction_; }
      set {
        stateAction_ = value;
      }
    }

    /// <summary>Field number for the "streamed" field.</summary>
    public const int StreamedFieldNumber = 6;
    private bool streamed_;
    /// <summary>
    /// If the request was streamed, setting this to true indicates that the command should
    /// be handled as a stream. Subsequently, the user function may send CrdtStreamedMessage,
    /// and a CrdtStreamCancelled message will be sent if the stream is cancelled (though
    /// not if the a CrdtStreamedMessage ends the stream first).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Streamed {
      get { return streamed_; }
      set {
        streamed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if (!object.Equals(ClientAction, other.ClientAction)) return false;
      if(!sideEffects_.Equals(other.sideEffects_)) return false;
      if (!object.Equals(StateAction, other.StateAction)) return false;
      if (Streamed != other.Streamed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId != 0L) hash ^= CommandId.GetHashCode();
      if (clientAction_ != null) hash ^= ClientAction.GetHashCode();
      hash ^= sideEffects_.GetHashCode();
      if (stateAction_ != null) hash ^= StateAction.GetHashCode();
      if (Streamed != false) hash ^= Streamed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommandId);
      }
      if (clientAction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientAction);
      }
      sideEffects_.WriteTo(output, _repeated_sideEffects_codec);
      if (stateAction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StateAction);
      }
      if (Streamed != false) {
        output.WriteRawTag(48);
        output.WriteBool(Streamed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommandId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommandId);
      }
      if (clientAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientAction);
      }
      size += sideEffects_.CalculateSize(_repeated_sideEffects_codec);
      if (stateAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateAction);
      }
      if (Streamed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtReply other) {
      if (other == null) {
        return;
      }
      if (other.CommandId != 0L) {
        CommandId = other.CommandId;
      }
      if (other.clientAction_ != null) {
        if (clientAction_ == null) {
          ClientAction = new global::Cloudstate.ClientAction();
        }
        ClientAction.MergeFrom(other.ClientAction);
      }
      sideEffects_.Add(other.sideEffects_);
      if (other.stateAction_ != null) {
        if (stateAction_ == null) {
          StateAction = new global::Cloudstate.Crdt.CrdtStateAction();
        }
        StateAction.MergeFrom(other.StateAction);
      }
      if (other.Streamed != false) {
        Streamed = other.Streamed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandId = input.ReadInt64();
            break;
          }
          case 18: {
            if (clientAction_ == null) {
              ClientAction = new global::Cloudstate.ClientAction();
            }
            input.ReadMessage(ClientAction);
            break;
          }
          case 34: {
            sideEffects_.AddEntriesFrom(input, _repeated_sideEffects_codec);
            break;
          }
          case 42: {
            if (stateAction_ == null) {
              StateAction = new global::Cloudstate.Crdt.CrdtStateAction();
            }
            input.ReadMessage(StateAction);
            break;
          }
          case 48: {
            Streamed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrdtStateAction : pb::IMessage<CrdtStateAction> {
    private static readonly pb::MessageParser<CrdtStateAction> _parser = new pb::MessageParser<CrdtStateAction>(() => new CrdtStateAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtStateAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStateAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStateAction(CrdtStateAction other) : this() {
      writeConsistency_ = other.writeConsistency_;
      switch (other.ActionCase) {
        case ActionOneofCase.Create:
          Create = other.Create.Clone();
          break;
        case ActionOneofCase.Update:
          Update = other.Update.Clone();
          break;
        case ActionOneofCase.Delete:
          Delete = other.Delete.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStateAction Clone() {
      return new CrdtStateAction(this);
    }

    /// <summary>Field number for the "create" field.</summary>
    public const int CreateFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtState Create {
      get { return actionCase_ == ActionOneofCase.Create ? (global::Cloudstate.Crdt.CrdtState) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Create;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtDelta Update {
      get { return actionCase_ == ActionOneofCase.Update ? (global::Cloudstate.Crdt.CrdtDelta) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Update;
      }
    }

    /// <summary>Field number for the "delete" field.</summary>
    public const int DeleteFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtDelete Delete {
      get { return actionCase_ == ActionOneofCase.Delete ? (global::Cloudstate.Crdt.CrdtDelete) action_ : null; }
      set {
        action_ = value;
        actionCase_ = value == null ? ActionOneofCase.None : ActionOneofCase.Delete;
      }
    }

    /// <summary>Field number for the "write_consistency" field.</summary>
    public const int WriteConsistencyFieldNumber = 8;
    private global::Cloudstate.Crdt.CrdtWriteConsistency writeConsistency_ = global::Cloudstate.Crdt.CrdtWriteConsistency.Local;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtWriteConsistency WriteConsistency {
      get { return writeConsistency_; }
      set {
        writeConsistency_ = value;
      }
    }

    private object action_;
    /// <summary>Enum of possible cases for the "action" oneof.</summary>
    public enum ActionOneofCase {
      None = 0,
      Create = 5,
      Update = 6,
      Delete = 7,
    }
    private ActionOneofCase actionCase_ = ActionOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionOneofCase ActionCase {
      get { return actionCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAction() {
      actionCase_ = ActionOneofCase.None;
      action_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtStateAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtStateAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Create, other.Create)) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (!object.Equals(Delete, other.Delete)) return false;
      if (WriteConsistency != other.WriteConsistency) return false;
      if (ActionCase != other.ActionCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (actionCase_ == ActionOneofCase.Create) hash ^= Create.GetHashCode();
      if (actionCase_ == ActionOneofCase.Update) hash ^= Update.GetHashCode();
      if (actionCase_ == ActionOneofCase.Delete) hash ^= Delete.GetHashCode();
      if (WriteConsistency != global::Cloudstate.Crdt.CrdtWriteConsistency.Local) hash ^= WriteConsistency.GetHashCode();
      hash ^= (int) actionCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (actionCase_ == ActionOneofCase.Create) {
        output.WriteRawTag(42);
        output.WriteMessage(Create);
      }
      if (actionCase_ == ActionOneofCase.Update) {
        output.WriteRawTag(50);
        output.WriteMessage(Update);
      }
      if (actionCase_ == ActionOneofCase.Delete) {
        output.WriteRawTag(58);
        output.WriteMessage(Delete);
      }
      if (WriteConsistency != global::Cloudstate.Crdt.CrdtWriteConsistency.Local) {
        output.WriteRawTag(64);
        output.WriteEnum((int) WriteConsistency);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (actionCase_ == ActionOneofCase.Create) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Create);
      }
      if (actionCase_ == ActionOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (actionCase_ == ActionOneofCase.Delete) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delete);
      }
      if (WriteConsistency != global::Cloudstate.Crdt.CrdtWriteConsistency.Local) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WriteConsistency);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtStateAction other) {
      if (other == null) {
        return;
      }
      if (other.WriteConsistency != global::Cloudstate.Crdt.CrdtWriteConsistency.Local) {
        WriteConsistency = other.WriteConsistency;
      }
      switch (other.ActionCase) {
        case ActionOneofCase.Create:
          if (Create == null) {
            Create = new global::Cloudstate.Crdt.CrdtState();
          }
          Create.MergeFrom(other.Create);
          break;
        case ActionOneofCase.Update:
          if (Update == null) {
            Update = new global::Cloudstate.Crdt.CrdtDelta();
          }
          Update.MergeFrom(other.Update);
          break;
        case ActionOneofCase.Delete:
          if (Delete == null) {
            Delete = new global::Cloudstate.Crdt.CrdtDelete();
          }
          Delete.MergeFrom(other.Delete);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            global::Cloudstate.Crdt.CrdtState subBuilder = new global::Cloudstate.Crdt.CrdtState();
            if (actionCase_ == ActionOneofCase.Create) {
              subBuilder.MergeFrom(Create);
            }
            input.ReadMessage(subBuilder);
            Create = subBuilder;
            break;
          }
          case 50: {
            global::Cloudstate.Crdt.CrdtDelta subBuilder = new global::Cloudstate.Crdt.CrdtDelta();
            if (actionCase_ == ActionOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
          case 58: {
            global::Cloudstate.Crdt.CrdtDelete subBuilder = new global::Cloudstate.Crdt.CrdtDelete();
            if (actionCase_ == ActionOneofCase.Delete) {
              subBuilder.MergeFrom(Delete);
            }
            input.ReadMessage(subBuilder);
            Delete = subBuilder;
            break;
          }
          case 64: {
            WriteConsistency = (global::Cloudstate.Crdt.CrdtWriteConsistency) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// May be sent as often as liked if the first reply set streamed to true
  /// </summary>
  public sealed partial class CrdtStreamedMessage : pb::IMessage<CrdtStreamedMessage> {
    private static readonly pb::MessageParser<CrdtStreamedMessage> _parser = new pb::MessageParser<CrdtStreamedMessage>(() => new CrdtStreamedMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtStreamedMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamedMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamedMessage(CrdtStreamedMessage other) : this() {
      commandId_ = other.commandId_;
      clientAction_ = other.clientAction_ != null ? other.clientAction_.Clone() : null;
      sideEffects_ = other.sideEffects_.Clone();
      endStream_ = other.endStream_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamedMessage Clone() {
      return new CrdtStreamedMessage(this);
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private long commandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "client_action" field.</summary>
    public const int ClientActionFieldNumber = 2;
    private global::Cloudstate.ClientAction clientAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.ClientAction ClientAction {
      get { return clientAction_; }
      set {
        clientAction_ = value;
      }
    }

    /// <summary>Field number for the "side_effects" field.</summary>
    public const int SideEffectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cloudstate.SideEffect> _repeated_sideEffects_codec
        = pb::FieldCodec.ForMessage(26, global::Cloudstate.SideEffect.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.SideEffect> sideEffects_ = new pbc::RepeatedField<global::Cloudstate.SideEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.SideEffect> SideEffects {
      get { return sideEffects_; }
    }

    /// <summary>Field number for the "end_stream" field.</summary>
    public const int EndStreamFieldNumber = 4;
    private bool endStream_;
    /// <summary>
    /// Indicates the stream should end, no messages may be sent for this command after this.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EndStream {
      get { return endStream_; }
      set {
        endStream_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtStreamedMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtStreamedMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if (!object.Equals(ClientAction, other.ClientAction)) return false;
      if(!sideEffects_.Equals(other.sideEffects_)) return false;
      if (EndStream != other.EndStream) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId != 0L) hash ^= CommandId.GetHashCode();
      if (clientAction_ != null) hash ^= ClientAction.GetHashCode();
      hash ^= sideEffects_.GetHashCode();
      if (EndStream != false) hash ^= EndStream.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommandId);
      }
      if (clientAction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientAction);
      }
      sideEffects_.WriteTo(output, _repeated_sideEffects_codec);
      if (EndStream != false) {
        output.WriteRawTag(32);
        output.WriteBool(EndStream);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommandId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommandId);
      }
      if (clientAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientAction);
      }
      size += sideEffects_.CalculateSize(_repeated_sideEffects_codec);
      if (EndStream != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtStreamedMessage other) {
      if (other == null) {
        return;
      }
      if (other.CommandId != 0L) {
        CommandId = other.CommandId;
      }
      if (other.clientAction_ != null) {
        if (clientAction_ == null) {
          ClientAction = new global::Cloudstate.ClientAction();
        }
        ClientAction.MergeFrom(other.ClientAction);
      }
      sideEffects_.Add(other.sideEffects_);
      if (other.EndStream != false) {
        EndStream = other.EndStream;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandId = input.ReadInt64();
            break;
          }
          case 18: {
            if (clientAction_ == null) {
              ClientAction = new global::Cloudstate.ClientAction();
            }
            input.ReadMessage(ClientAction);
            break;
          }
          case 26: {
            sideEffects_.AddEntriesFrom(input, _repeated_sideEffects_codec);
            break;
          }
          case 32: {
            EndStream = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CrdtStreamCancelledResponse : pb::IMessage<CrdtStreamCancelledResponse> {
    private static readonly pb::MessageParser<CrdtStreamCancelledResponse> _parser = new pb::MessageParser<CrdtStreamCancelledResponse>(() => new CrdtStreamCancelledResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CrdtStreamCancelledResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Crdt.CrdtReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamCancelledResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamCancelledResponse(CrdtStreamCancelledResponse other) : this() {
      commandId_ = other.commandId_;
      sideEffects_ = other.sideEffects_.Clone();
      stateAction_ = other.stateAction_ != null ? other.stateAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CrdtStreamCancelledResponse Clone() {
      return new CrdtStreamCancelledResponse(this);
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private long commandId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "side_effects" field.</summary>
    public const int SideEffectsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Cloudstate.SideEffect> _repeated_sideEffects_codec
        = pb::FieldCodec.ForMessage(18, global::Cloudstate.SideEffect.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.SideEffect> sideEffects_ = new pbc::RepeatedField<global::Cloudstate.SideEffect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.SideEffect> SideEffects {
      get { return sideEffects_; }
    }

    /// <summary>Field number for the "state_action" field.</summary>
    public const int StateActionFieldNumber = 3;
    private global::Cloudstate.Crdt.CrdtStateAction stateAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Crdt.CrdtStateAction StateAction {
      get { return stateAction_; }
      set {
        stateAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CrdtStreamCancelledResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CrdtStreamCancelledResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if(!sideEffects_.Equals(other.sideEffects_)) return false;
      if (!object.Equals(StateAction, other.StateAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId != 0L) hash ^= CommandId.GetHashCode();
      hash ^= sideEffects_.GetHashCode();
      if (stateAction_ != null) hash ^= StateAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommandId);
      }
      sideEffects_.WriteTo(output, _repeated_sideEffects_codec);
      if (stateAction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StateAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommandId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommandId);
      }
      size += sideEffects_.CalculateSize(_repeated_sideEffects_codec);
      if (stateAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StateAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CrdtStreamCancelledResponse other) {
      if (other == null) {
        return;
      }
      if (other.CommandId != 0L) {
        CommandId = other.CommandId;
      }
      sideEffects_.Add(other.sideEffects_);
      if (other.stateAction_ != null) {
        if (stateAction_ == null) {
          StateAction = new global::Cloudstate.Crdt.CrdtStateAction();
        }
        StateAction.MergeFrom(other.StateAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandId = input.ReadInt64();
            break;
          }
          case 18: {
            sideEffects_.AddEntriesFrom(input, _repeated_sideEffects_codec);
            break;
          }
          case 26: {
            if (stateAction_ == null) {
              StateAction = new global::Cloudstate.Crdt.CrdtStateAction();
            }
            input.ReadMessage(StateAction);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
