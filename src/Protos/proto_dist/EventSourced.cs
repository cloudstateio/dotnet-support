// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cloudstate/event_sourced.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cloudstate.Eventsourced {

  /// <summary>Holder for reflection information generated from cloudstate/event_sourced.proto</summary>
  public static partial class EventSourcedReflection {

    #region Descriptor
    /// <summary>File descriptor for cloudstate/event_sourced.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EventSourcedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5jbG91ZHN0YXRlL2V2ZW50X3NvdXJjZWQucHJvdG8SF2Nsb3Vkc3RhdGUu",
            "ZXZlbnRzb3VyY2VkGhlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGhdjbG91",
            "ZHN0YXRlL2VudGl0eS5wcm90byJ8ChBFdmVudFNvdXJjZWRJbml0EhQKDHNl",
            "cnZpY2VfbmFtZRgBIAEoCRIRCgllbnRpdHlfaWQYAiABKAkSPwoIc25hcHNo",
            "b3QYAyABKAsyLS5jbG91ZHN0YXRlLmV2ZW50c291cmNlZC5FdmVudFNvdXJj",
            "ZWRTbmFwc2hvdCJZChRFdmVudFNvdXJjZWRTbmFwc2hvdBIZChFzbmFwc2hv",
            "dF9zZXF1ZW5jZRgBIAEoAxImCghzbmFwc2hvdBgCIAEoCzIULmdvb2dsZS5w",
            "cm90b2J1Zi5BbnkiTAoRRXZlbnRTb3VyY2VkRXZlbnQSEAoIc2VxdWVuY2UY",
            "ASABKAMSJQoHcGF5bG9hZBgCIAEoCzIULmdvb2dsZS5wcm90b2J1Zi5Bbnki",
            "1AEKEUV2ZW50U291cmNlZFJlcGx5EhIKCmNvbW1hbmRfaWQYASABKAMSLwoN",
            "Y2xpZW50X2FjdGlvbhgCIAEoCzIYLmNsb3Vkc3RhdGUuQ2xpZW50QWN0aW9u",
            "EiwKDHNpZGVfZWZmZWN0cxgDIAMoCzIWLmNsb3Vkc3RhdGUuU2lkZUVmZmVj",
            "dBIkCgZldmVudHMYBCADKAsyFC5nb29nbGUucHJvdG9idWYuQW55EiYKCHNu",
            "YXBzaG90GAUgASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueSLBAQoURXZlbnRT",
            "b3VyY2VkU3RyZWFtSW4SOQoEaW5pdBgBIAEoCzIpLmNsb3Vkc3RhdGUuZXZl",
            "bnRzb3VyY2VkLkV2ZW50U291cmNlZEluaXRIABI7CgVldmVudBgCIAEoCzIq",
            "LmNsb3Vkc3RhdGUuZXZlbnRzb3VyY2VkLkV2ZW50U291cmNlZEV2ZW50SAAS",
            "JgoHY29tbWFuZBgDIAEoCzITLmNsb3Vkc3RhdGUuQ29tbWFuZEgAQgkKB21l",
            "c3NhZ2UihwEKFUV2ZW50U291cmNlZFN0cmVhbU91dBI7CgVyZXBseRgBIAEo",
            "CzIqLmNsb3Vkc3RhdGUuZXZlbnRzb3VyY2VkLkV2ZW50U291cmNlZFJlcGx5",
            "SAASJgoHZmFpbHVyZRgCIAEoCzITLmNsb3Vkc3RhdGUuRmFpbHVyZUgAQgkK",
            "B21lc3NhZ2UyfQoMRXZlbnRTb3VyY2VkEm0KBmhhbmRsZRItLmNsb3Vkc3Rh",
            "dGUuZXZlbnRzb3VyY2VkLkV2ZW50U291cmNlZFN0cmVhbUluGi4uY2xvdWRz",
            "dGF0ZS5ldmVudHNvdXJjZWQuRXZlbnRTb3VyY2VkU3RyZWFtT3V0IgAoATAB",
            "QhgKFmlvLmNsb3Vkc3RhdGUucHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Cloudstate.EntityReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Eventsourced.EventSourcedInit), global::Cloudstate.Eventsourced.EventSourcedInit.Parser, new[]{ "ServiceName", "EntityId", "Snapshot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Eventsourced.EventSourcedSnapshot), global::Cloudstate.Eventsourced.EventSourcedSnapshot.Parser, new[]{ "SnapshotSequence", "Snapshot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Eventsourced.EventSourcedEvent), global::Cloudstate.Eventsourced.EventSourcedEvent.Parser, new[]{ "Sequence", "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Eventsourced.EventSourcedReply), global::Cloudstate.Eventsourced.EventSourcedReply.Parser, new[]{ "CommandId", "ClientAction", "SideEffects", "Events", "Snapshot" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Eventsourced.EventSourcedStreamIn), global::Cloudstate.Eventsourced.EventSourcedStreamIn.Parser, new[]{ "Init", "Event", "Command" }, new[]{ "Message" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cloudstate.Eventsourced.EventSourcedStreamOut), global::Cloudstate.Eventsourced.EventSourcedStreamOut.Parser, new[]{ "Reply", "Failure" }, new[]{ "Message" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The init message. This will always be the first message sent to the entity when
  /// it is loaded.
  /// </summary>
  public sealed partial class EventSourcedInit : pb::IMessage<EventSourcedInit> {
    private static readonly pb::MessageParser<EventSourcedInit> _parser = new pb::MessageParser<EventSourcedInit>(() => new EventSourcedInit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSourcedInit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Eventsourced.EventSourcedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedInit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedInit(EventSourcedInit other) : this() {
      serviceName_ = other.serviceName_;
      entityId_ = other.entityId_;
      snapshot_ = other.snapshot_ != null ? other.snapshot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedInit Clone() {
      return new EventSourcedInit(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 2;
    private string entityId_ = "";
    /// <summary>
    /// The ID of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EntityId {
      get { return entityId_; }
      set {
        entityId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "snapshot" field.</summary>
    public const int SnapshotFieldNumber = 3;
    private global::Cloudstate.Eventsourced.EventSourcedSnapshot snapshot_;
    /// <summary>
    /// If present the entity should initialise its state using this snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Eventsourced.EventSourcedSnapshot Snapshot {
      get { return snapshot_; }
      set {
        snapshot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSourcedInit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSourcedInit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      if (EntityId != other.EntityId) return false;
      if (!object.Equals(Snapshot, other.Snapshot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (EntityId.Length != 0) hash ^= EntityId.GetHashCode();
      if (snapshot_ != null) hash ^= Snapshot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (EntityId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EntityId);
      }
      if (snapshot_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Snapshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (EntityId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EntityId);
      }
      if (snapshot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Snapshot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSourcedInit other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.EntityId.Length != 0) {
        EntityId = other.EntityId;
      }
      if (other.snapshot_ != null) {
        if (snapshot_ == null) {
          Snapshot = new global::Cloudstate.Eventsourced.EventSourcedSnapshot();
        }
        Snapshot.MergeFrom(other.Snapshot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
          case 18: {
            EntityId = input.ReadString();
            break;
          }
          case 26: {
            if (snapshot_ == null) {
              Snapshot = new global::Cloudstate.Eventsourced.EventSourcedSnapshot();
            }
            input.ReadMessage(Snapshot);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A snapshot
  /// </summary>
  public sealed partial class EventSourcedSnapshot : pb::IMessage<EventSourcedSnapshot> {
    private static readonly pb::MessageParser<EventSourcedSnapshot> _parser = new pb::MessageParser<EventSourcedSnapshot>(() => new EventSourcedSnapshot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSourcedSnapshot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Eventsourced.EventSourcedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedSnapshot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedSnapshot(EventSourcedSnapshot other) : this() {
      snapshotSequence_ = other.snapshotSequence_;
      snapshot_ = other.snapshot_ != null ? other.snapshot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedSnapshot Clone() {
      return new EventSourcedSnapshot(this);
    }

    /// <summary>Field number for the "snapshot_sequence" field.</summary>
    public const int SnapshotSequenceFieldNumber = 1;
    private long snapshotSequence_;
    /// <summary>
    /// The sequence number when the snapshot was taken.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SnapshotSequence {
      get { return snapshotSequence_; }
      set {
        snapshotSequence_ = value;
      }
    }

    /// <summary>Field number for the "snapshot" field.</summary>
    public const int SnapshotFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any snapshot_;
    /// <summary>
    /// The snapshot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Snapshot {
      get { return snapshot_; }
      set {
        snapshot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSourcedSnapshot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSourcedSnapshot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SnapshotSequence != other.SnapshotSequence) return false;
      if (!object.Equals(Snapshot, other.Snapshot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SnapshotSequence != 0L) hash ^= SnapshotSequence.GetHashCode();
      if (snapshot_ != null) hash ^= Snapshot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SnapshotSequence != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(SnapshotSequence);
      }
      if (snapshot_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Snapshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SnapshotSequence != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SnapshotSequence);
      }
      if (snapshot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Snapshot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSourcedSnapshot other) {
      if (other == null) {
        return;
      }
      if (other.SnapshotSequence != 0L) {
        SnapshotSequence = other.SnapshotSequence;
      }
      if (other.snapshot_ != null) {
        if (snapshot_ == null) {
          Snapshot = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Snapshot.MergeFrom(other.Snapshot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SnapshotSequence = input.ReadInt64();
            break;
          }
          case 18: {
            if (snapshot_ == null) {
              Snapshot = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Snapshot);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// An event. These will be sent to the entity when the entity starts up.
  /// </summary>
  public sealed partial class EventSourcedEvent : pb::IMessage<EventSourcedEvent> {
    private static readonly pb::MessageParser<EventSourcedEvent> _parser = new pb::MessageParser<EventSourcedEvent>(() => new EventSourcedEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSourcedEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Eventsourced.EventSourcedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedEvent(EventSourcedEvent other) : this() {
      sequence_ = other.sequence_;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedEvent Clone() {
      return new EventSourcedEvent(this);
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 1;
    private long sequence_;
    /// <summary>
    /// The sequence number of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any payload_;
    /// <summary>
    /// The event payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSourcedEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSourcedEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sequence != other.Sequence) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sequence != 0L) hash ^= Sequence.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sequence != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Sequence);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sequence != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Sequence);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSourcedEvent other) {
      if (other == null) {
        return;
      }
      if (other.Sequence != 0L) {
        Sequence = other.Sequence;
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Payload.MergeFrom(other.Payload);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sequence = input.ReadInt64();
            break;
          }
          case 18: {
            if (payload_ == null) {
              Payload = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Payload);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A reply to a command.
  /// </summary>
  public sealed partial class EventSourcedReply : pb::IMessage<EventSourcedReply> {
    private static readonly pb::MessageParser<EventSourcedReply> _parser = new pb::MessageParser<EventSourcedReply>(() => new EventSourcedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSourcedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Eventsourced.EventSourcedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedReply(EventSourcedReply other) : this() {
      commandId_ = other.commandId_;
      clientAction_ = other.clientAction_ != null ? other.clientAction_.Clone() : null;
      sideEffects_ = other.sideEffects_.Clone();
      events_ = other.events_.Clone();
      snapshot_ = other.snapshot_ != null ? other.snapshot_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedReply Clone() {
      return new EventSourcedReply(this);
    }

    /// <summary>Field number for the "command_id" field.</summary>
    public const int CommandIdFieldNumber = 1;
    private long commandId_;
    /// <summary>
    /// The id of the command being replied to. Must match the input command.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CommandId {
      get { return commandId_; }
      set {
        commandId_ = value;
      }
    }

    /// <summary>Field number for the "client_action" field.</summary>
    public const int ClientActionFieldNumber = 2;
    private global::Cloudstate.ClientAction clientAction_;
    /// <summary>
    /// The action to take
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.ClientAction ClientAction {
      get { return clientAction_; }
      set {
        clientAction_ = value;
      }
    }

    /// <summary>Field number for the "side_effects" field.</summary>
    public const int SideEffectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Cloudstate.SideEffect> _repeated_sideEffects_codec
        = pb::FieldCodec.ForMessage(26, global::Cloudstate.SideEffect.Parser);
    private readonly pbc::RepeatedField<global::Cloudstate.SideEffect> sideEffects_ = new pbc::RepeatedField<global::Cloudstate.SideEffect>();
    /// <summary>
    /// Any side effects to perform
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cloudstate.SideEffect> SideEffects {
      get { return sideEffects_; }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_events_codec
        = pb::FieldCodec.ForMessage(34, global::Google.Protobuf.WellKnownTypes.Any.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> events_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
    /// <summary>
    /// A list of events to persist - these will be persisted before the reply
    /// is sent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "snapshot" field.</summary>
    public const int SnapshotFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Any snapshot_;
    /// <summary>
    /// An optional snapshot to persist. It is assumed that this snapshot will have
    /// the state of any events in the events field applied to it. It is illegal to
    /// send a snapshot without sending any events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Snapshot {
      get { return snapshot_; }
      set {
        snapshot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSourcedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSourcedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CommandId != other.CommandId) return false;
      if (!object.Equals(ClientAction, other.ClientAction)) return false;
      if(!sideEffects_.Equals(other.sideEffects_)) return false;
      if(!events_.Equals(other.events_)) return false;
      if (!object.Equals(Snapshot, other.Snapshot)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CommandId != 0L) hash ^= CommandId.GetHashCode();
      if (clientAction_ != null) hash ^= ClientAction.GetHashCode();
      hash ^= sideEffects_.GetHashCode();
      hash ^= events_.GetHashCode();
      if (snapshot_ != null) hash ^= Snapshot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CommandId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CommandId);
      }
      if (clientAction_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientAction);
      }
      sideEffects_.WriteTo(output, _repeated_sideEffects_codec);
      events_.WriteTo(output, _repeated_events_codec);
      if (snapshot_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Snapshot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CommandId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CommandId);
      }
      if (clientAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientAction);
      }
      size += sideEffects_.CalculateSize(_repeated_sideEffects_codec);
      size += events_.CalculateSize(_repeated_events_codec);
      if (snapshot_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Snapshot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSourcedReply other) {
      if (other == null) {
        return;
      }
      if (other.CommandId != 0L) {
        CommandId = other.CommandId;
      }
      if (other.clientAction_ != null) {
        if (clientAction_ == null) {
          ClientAction = new global::Cloudstate.ClientAction();
        }
        ClientAction.MergeFrom(other.ClientAction);
      }
      sideEffects_.Add(other.sideEffects_);
      events_.Add(other.events_);
      if (other.snapshot_ != null) {
        if (snapshot_ == null) {
          Snapshot = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Snapshot.MergeFrom(other.Snapshot);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CommandId = input.ReadInt64();
            break;
          }
          case 18: {
            if (clientAction_ == null) {
              ClientAction = new global::Cloudstate.ClientAction();
            }
            input.ReadMessage(ClientAction);
            break;
          }
          case 26: {
            sideEffects_.AddEntriesFrom(input, _repeated_sideEffects_codec);
            break;
          }
          case 34: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 42: {
            if (snapshot_ == null) {
              Snapshot = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Snapshot);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Input message type for the gRPC stream in.
  /// </summary>
  public sealed partial class EventSourcedStreamIn : pb::IMessage<EventSourcedStreamIn> {
    private static readonly pb::MessageParser<EventSourcedStreamIn> _parser = new pb::MessageParser<EventSourcedStreamIn>(() => new EventSourcedStreamIn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSourcedStreamIn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Eventsourced.EventSourcedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedStreamIn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedStreamIn(EventSourcedStreamIn other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Init:
          Init = other.Init.Clone();
          break;
        case MessageOneofCase.Event:
          Event = other.Event.Clone();
          break;
        case MessageOneofCase.Command:
          Command = other.Command.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedStreamIn Clone() {
      return new EventSourcedStreamIn(this);
    }

    /// <summary>Field number for the "init" field.</summary>
    public const int InitFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Eventsourced.EventSourcedInit Init {
      get { return messageCase_ == MessageOneofCase.Init ? (global::Cloudstate.Eventsourced.EventSourcedInit) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Init;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Eventsourced.EventSourcedEvent Event {
      get { return messageCase_ == MessageOneofCase.Event ? (global::Cloudstate.Eventsourced.EventSourcedEvent) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Event;
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Command Command {
      get { return messageCase_ == MessageOneofCase.Command ? (global::Cloudstate.Command) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Command;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Init = 1,
      Event = 2,
      Command = 3,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSourcedStreamIn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSourcedStreamIn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Init, other.Init)) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if (!object.Equals(Command, other.Command)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Init) hash ^= Init.GetHashCode();
      if (messageCase_ == MessageOneofCase.Event) hash ^= Event.GetHashCode();
      if (messageCase_ == MessageOneofCase.Command) hash ^= Command.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageCase_ == MessageOneofCase.Init) {
        output.WriteRawTag(10);
        output.WriteMessage(Init);
      }
      if (messageCase_ == MessageOneofCase.Event) {
        output.WriteRawTag(18);
        output.WriteMessage(Event);
      }
      if (messageCase_ == MessageOneofCase.Command) {
        output.WriteRawTag(26);
        output.WriteMessage(Command);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Init) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Init);
      }
      if (messageCase_ == MessageOneofCase.Event) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (messageCase_ == MessageOneofCase.Command) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Command);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSourcedStreamIn other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Init:
          if (Init == null) {
            Init = new global::Cloudstate.Eventsourced.EventSourcedInit();
          }
          Init.MergeFrom(other.Init);
          break;
        case MessageOneofCase.Event:
          if (Event == null) {
            Event = new global::Cloudstate.Eventsourced.EventSourcedEvent();
          }
          Event.MergeFrom(other.Event);
          break;
        case MessageOneofCase.Command:
          if (Command == null) {
            Command = new global::Cloudstate.Command();
          }
          Command.MergeFrom(other.Command);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Eventsourced.EventSourcedInit subBuilder = new global::Cloudstate.Eventsourced.EventSourcedInit();
            if (messageCase_ == MessageOneofCase.Init) {
              subBuilder.MergeFrom(Init);
            }
            input.ReadMessage(subBuilder);
            Init = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Eventsourced.EventSourcedEvent subBuilder = new global::Cloudstate.Eventsourced.EventSourcedEvent();
            if (messageCase_ == MessageOneofCase.Event) {
              subBuilder.MergeFrom(Event);
            }
            input.ReadMessage(subBuilder);
            Event = subBuilder;
            break;
          }
          case 26: {
            global::Cloudstate.Command subBuilder = new global::Cloudstate.Command();
            if (messageCase_ == MessageOneofCase.Command) {
              subBuilder.MergeFrom(Command);
            }
            input.ReadMessage(subBuilder);
            Command = subBuilder;
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Output message type for the gRPC stream out.
  /// </summary>
  public sealed partial class EventSourcedStreamOut : pb::IMessage<EventSourcedStreamOut> {
    private static readonly pb::MessageParser<EventSourcedStreamOut> _parser = new pb::MessageParser<EventSourcedStreamOut>(() => new EventSourcedStreamOut());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSourcedStreamOut> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cloudstate.Eventsourced.EventSourcedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedStreamOut() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedStreamOut(EventSourcedStreamOut other) : this() {
      switch (other.MessageCase) {
        case MessageOneofCase.Reply:
          Reply = other.Reply.Clone();
          break;
        case MessageOneofCase.Failure:
          Failure = other.Failure.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSourcedStreamOut Clone() {
      return new EventSourcedStreamOut(this);
    }

    /// <summary>Field number for the "reply" field.</summary>
    public const int ReplyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Eventsourced.EventSourcedReply Reply {
      get { return messageCase_ == MessageOneofCase.Reply ? (global::Cloudstate.Eventsourced.EventSourcedReply) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Reply;
      }
    }

    /// <summary>Field number for the "failure" field.</summary>
    public const int FailureFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cloudstate.Failure Failure {
      get { return messageCase_ == MessageOneofCase.Failure ? (global::Cloudstate.Failure) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Failure;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Reply = 1,
      Failure = 2,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSourcedStreamOut);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSourcedStreamOut other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Reply, other.Reply)) return false;
      if (!object.Equals(Failure, other.Failure)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (messageCase_ == MessageOneofCase.Reply) hash ^= Reply.GetHashCode();
      if (messageCase_ == MessageOneofCase.Failure) hash ^= Failure.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (messageCase_ == MessageOneofCase.Reply) {
        output.WriteRawTag(10);
        output.WriteMessage(Reply);
      }
      if (messageCase_ == MessageOneofCase.Failure) {
        output.WriteRawTag(18);
        output.WriteMessage(Failure);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (messageCase_ == MessageOneofCase.Reply) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reply);
      }
      if (messageCase_ == MessageOneofCase.Failure) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Failure);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSourcedStreamOut other) {
      if (other == null) {
        return;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Reply:
          if (Reply == null) {
            Reply = new global::Cloudstate.Eventsourced.EventSourcedReply();
          }
          Reply.MergeFrom(other.Reply);
          break;
        case MessageOneofCase.Failure:
          if (Failure == null) {
            Failure = new global::Cloudstate.Failure();
          }
          Failure.MergeFrom(other.Failure);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Cloudstate.Eventsourced.EventSourcedReply subBuilder = new global::Cloudstate.Eventsourced.EventSourcedReply();
            if (messageCase_ == MessageOneofCase.Reply) {
              subBuilder.MergeFrom(Reply);
            }
            input.ReadMessage(subBuilder);
            Reply = subBuilder;
            break;
          }
          case 18: {
            global::Cloudstate.Failure subBuilder = new global::Cloudstate.Failure();
            if (messageCase_ == MessageOneofCase.Failure) {
              subBuilder.MergeFrom(Failure);
            }
            input.ReadMessage(subBuilder);
            Failure = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
